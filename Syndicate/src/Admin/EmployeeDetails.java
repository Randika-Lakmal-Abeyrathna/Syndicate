/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import Classes.JDBC;
import Classes.ToolsClass;
import GUI.Home;
import GUI.Menu;
import java.awt.Desktop;
import java.io.File;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author User
 */
public class EmployeeDetails extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeDetails
     */
    JDBC DB = new JDBC();
    ToolsClass tool = new ToolsClass();
    org.apache.log4j.Logger logError = org.apache.log4j.Logger.getLogger("ERROR");
    org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger("Employee Details");

    public EmployeeDetails() {
        initComponents();
        Menu();
        lbl_userType.setText(Home.ut);
        lbl_username.setText(Home.ut);
        setJobTitle();
        setDisable();
        setAll();
        lbl_date.setText(new Classes.Commons().Date());
        new Classes.Commons().time(lbl_time);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //---------------------------------Disable Compnents in Basic Details Start -----------------------------------------------------//
    void setDisable() {
        cmb_result.setVisible(false);
        cmb_employeeNames.setVisible(false);

    }
     //////------------Menu-----------//////
    
    void Menu(){
        try {
            popup_menu.setText("Menu");
            popup_help.setText("Help");
            popup_exit.setText("Exit");
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }

    //Employee Name, Date, Job Title
    // Employee Select
    void setEmployeeSelect() {
        cmb_result.setVisible(false);
        cmb_employeeNames.setVisible(true);
        try {
            ResultSet rs = DB.getData("SELECT * FROM employee_reg WHERE status='" + 1 + "'");
            Vector v = new Vector();
            while (rs.next()) {
                String id = rs.getString("emp_id");
                String fname = rs.getString("f_name");
                String lname = rs.getString("l_name");
                String all = id + "-" + fname + "-" + lname;
                v.add(all);
            }
            rs.close();
            cmb_employeeNames.removeAllItems();
            for (int i = 0; i < v.size(); i++) {
                cmb_employeeNames.addItem(v.get(i));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0001 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
        }
    }

    //Job Title Select
    void setJobTitleSelect() {
        cmb_result.setVisible(true);
        cmb_employeeNames.setVisible(false);

        try {
            ResultSet rs = DB.getData("SELECT * FROM job_title");
            Vector v = new Vector();
            while (rs.next()) {
                v.add(rs.getString("job_name"));
            }
            rs.close();
            cmb_result.removeAllItems();
            for (int i = 0; i < v.size(); i++) {
                cmb_result.addItem(v.get(i));

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0002 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
        }
    }

    //---------------------------------Disable Compnents in Basic Details Finish -----------------------------------------------------//
    //---------------------------------Search in Basic Details Start -----------------------------------------------------//
    //All, Employee Name, Job Title, Past
    String fname, lname, nic, empid, addno, street1, street2, city, mobile, resgistrDate, email, qualification, status;

    //////// When Employee Name Select In Combo Box 
    void setEmployeeNameselect(String id) {
        if (!id.equals(null)) {
            tool.clearTable(tbl_basicDetails);
            try {
                ResultSet rs = DB.getData("SELECT * FROM employee_reg WHERE emp_id='" + id + "' AND status='" + 1 + "' ");
                System.out.println("1");
                while (rs.next()) {
                    System.out.println("2");
                    fname = rs.getString("f_name");
                    lname = rs.getString("l_name");
                    nic = rs.getString("nic");
                    empid = id;
                    addno = rs.getString("no");
                    street1 = rs.getString("street1");
                    street2 = rs.getString("street2");
                    city = rs.getString("city");
                    mobile = rs.getString("mobile_no");
                    resgistrDate = rs.getString("date");
                    email = rs.getString("email");
                    String qualificationid = rs.getString("qualification_id");

                    ResultSet rs1 = DB.getData("SELECT * FROM qualification WHERE qualification_id='" + qualificationid + "'");
                    while (rs1.next()) {
                        qualification = rs1.getString("qualification");

                        tool.addToTable(tbl_basicDetails, empid, nic, fname + " " + lname, qualification, email, mobile, addno + "," + street1 + "," + street2 + "," + city, resgistrDate, "Active");
                    }
                    rs1.close();
                            
                }
                rs.close();
            } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0003 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
            }
        }

    }

    /////// When All Select In Combo Box 
    void setAll() {
        tool.clearTable(tbl_basicDetails);
        try {
            ResultSet rs = DB.getData("SELECT * FROM employee_reg");
            while (rs.next()) {
                fname = rs.getString("f_name");
                lname = rs.getString("l_name");
                nic = rs.getString("nic");
                empid = rs.getString("emp_id");
                addno = rs.getString("no");
                street1 = rs.getString("street1");
                street2 = rs.getString("street2");
                city = rs.getString("city");
                mobile = rs.getString("mobile_no");
                resgistrDate = rs.getString("date");
                email = rs.getString("email");
                status = rs.getString("status");
                String StatusName;
                if (status.equals("1")) {
                    StatusName = "Active";
                } else {
                    StatusName = "Inactive";
                }
                String qualificationid = rs.getString("qualification_id");

                ResultSet rs1 = DB.getData("SELECT * FROM qualification WHERE qualification_id='" + qualificationid + "'");
                while (rs1.next()) {
                    qualification = rs1.getString("qualification");

                    tool.addToTable(tbl_basicDetails, empid, nic, fname + " " + lname, qualification, email, mobile, addno + "," + street1 + "," + street2 + "," + city, resgistrDate, StatusName);
                }
                rs1.close();
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0004 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
        }
    }

    //////// When Job Title Select Select In Combo Box 
    void setJobtitleSearch(String jobName) {
        tool.clearTable(tbl_basicDetails);
        try {
            ResultSet rs2 = DB.getData("SELECT * FROM job_title WHERE job_name='" + jobName + "'");
            while (rs2.next()) {
                System.out.println(jobName + " 1");
                ResultSet rs = DB.getData("SELECT * FROM employee_reg WHERE job_title_id='" + rs2.getString("job_title_id") + "' ");
                while (rs.next()) {
                    System.out.println(jobName + " 2");
                    fname = rs.getString("f_name");
                    lname = rs.getString("l_name");
                    nic = rs.getString("nic");
                    empid = rs.getString("emp_id");
                    addno = rs.getString("no");
                    street1 = rs.getString("street1");
                    street2 = rs.getString("street2");
                    city = rs.getString("city");
                    mobile = rs.getString("mobile_no");
                    resgistrDate = rs.getString("date");
                    email = rs.getString("email");
                    status = rs.getString("status");
                    String StatusName;
                    if (status.equals("1")) {
                        StatusName = "Active";
                    } else {
                        StatusName = "Inactive";
                    }
                    String qualificationid = rs.getString("qualification_id");

                    ResultSet rs1 = DB.getData("SELECT * FROM qualification WHERE qualification_id='" + qualificationid + "'");
                    while (rs1.next()) {
                        qualification = rs1.getString("qualification");

                        tool.addToTable(tbl_basicDetails, empid, nic, fname + " " + lname, qualification, email, mobile, addno + "," + street1 + "," + street2 + "," + city, resgistrDate, StatusName);
                    }
                    rs1.close();
                }
                rs.close();
            }
            rs2.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0005 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
        }
    }
    //////// When Past Select In Combo Box 

    void setPastSelected() {
        try {
            ResultSet rs = DB.getData("SELECT * FROM employee_reg WHERE status='" + 0 + "'");
            System.out.println("1");
            while (rs.next()) {
                System.out.println("2");
                fname = rs.getString("f_name");
                lname = rs.getString("l_name");
                nic = rs.getString("nic");
                empid = rs.getString("emp_id");
                addno = rs.getString("no");
                street1 = rs.getString("street1");
                street2 = rs.getString("street2");
                city = rs.getString("city");
                mobile = rs.getString("mobile_no");
                resgistrDate = rs.getString("date");
                email = rs.getString("email");
                String qualificationid = rs.getString("qualification_id");

                ResultSet rs1 = DB.getData("SELECT * FROM qualification WHERE qualification_id='" + qualificationid + "'");
                while (rs1.next()) {
                    qualification = rs1.getString("qualification");

                    tool.addToTable(tbl_basicDetails, empid, nic, fname + " " + lname, qualification, email, mobile, addno + "," + street1 + "," + street2 + "," + city, resgistrDate, "Inactive");
                }
                rs1.close();
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0006 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
        }
    }

    //---------------------------------Search in Basic Details Finish -----------------------------------------------------//
    //--------------------------------- Desable Components in Manager Start --------------------------------------------------------------//
    //--------------------------------- Desable Components in Manager Finish--------------------------------------------------------------//
    //---------------------------------- set Combo Box  ---------------------------------------------------------------// 
    // set manager Job Title
    void setJobTitle() {
        try {
            ResultSet rs = DB.getData("SELECT * FROM job_title");
            Vector v = new Vector();
            while (rs.next()) {
                String name = rs.getString("job_name").toLowerCase();
                if (name.equals("admin")) {

                } else {
                    v.add(rs.getString("job_name"));
                }
            }
            rs.close();
            cmb_jobtitle.removeAllItems();
            for (int i = 0; i < v.size(); i++) {
                cmb_jobtitle.addItem(v.get(i));
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0007 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));

        }
    }

    //---------------------------------- set Combo Box Finish ---------------------------------------------------------------// 
    //---------------------------------- set Employee ID Start ---------------------------------------------------------------// 
    //---------------------------------- set Employee ID Finish ---------------------------------------------------------------// 
    //---------------------------------- set Foreign keys start ---------------------------------------------------------------// 
    String setGender(String name) {
        String genderId = null;
        try {
            ResultSet rs = DB.getData("SELECT * FROM gender WHERE gender='" + name + "'");
            while (rs.next()) {
                genderId = rs.getString("gender_id");
            }
            rs.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0008 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
        }
        return genderId;
    }

    String setQualification(String name) {
        String qualificationId = null;
        try {
            ResultSet rs = DB.getData("SELECT * FROM qualification WHERE qualification='" + name + "'");
            while (rs.next()) {
                qualificationId = rs.getString("qualification_id");
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0009 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
        }
        return qualificationId;

    }

    String setSalutation(String name) {
        String salutationId = null;
        try {
            ResultSet rs = DB.getData("SELECT * FROM salutation WHERE salutation='" + name + "'");
            while (rs.next()) {
                salutationId = rs.getString("salutation_id");
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0010 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
        }
        return salutationId;
    }

    String setJobTitle(String name) {
        String jobId = null;
        try {
            ResultSet rs = DB.getData("SELECT * FROM job_title WHERE job_name='" + name + "'");
            while (rs.next()) {
                jobId = rs.getString("job_title_id");
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0011 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
        }
        return jobId;
    }

    //---------------------------------- set Foreign keys Finish ---------------------------------------------------------------// 
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        popupMenu = new javax.swing.JPopupMenu();
        popup_menu = new javax.swing.JMenuItem();
        popup_help = new javax.swing.JMenuItem();
        popup_exit = new javax.swing.JMenuItem();
        pnl_Expenceheader = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lbl_userType = new javax.swing.JLabel();
        lbl_username = new javax.swing.JLabel();
        lbl_date = new javax.swing.JLabel();
        lbl_time = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel15 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        lbl_BscDetlsSrchBy = new javax.swing.JLabel();
        cmb_serchtype = new javax.swing.JComboBox();
        cmb_result = new javax.swing.JComboBox();
        cmb_employeeNames = new javax.swing.JComboBox();
        jPanel31 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_basicDetails = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        pnl_Expencesearch = new javax.swing.JPanel();
        txt_employeesearch = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        pnl_lecturerDetails = new javax.swing.JPanel();
        lbl_id = new javax.swing.JLabel();
        lbl_nic = new javax.swing.JLabel();
        lbl_salutation = new javax.swing.JLabel();
        lbl_firstName = new javax.swing.JLabel();
        lbl_lastName = new javax.swing.JLabel();
        lbl_addno = new javax.swing.JLabel();
        lbl_gender = new javax.swing.JLabel();
        lbl_email = new javax.swing.JLabel();
        lbl_homeNumber = new javax.swing.JLabel();
        lbl_mobileNumber = new javax.swing.JLabel();
        lbl_status = new javax.swing.JLabel();
        cmb_jobtitle = new javax.swing.JComboBox();
        lbl_addstreet1 = new javax.swing.JLabel();
        lbl_addstreet2 = new javax.swing.JLabel();
        lbl_addcity = new javax.swing.JLabel();
        lbl_status1 = new javax.swing.JLabel();
        lbl_empid = new javax.swing.JLabel();
        lbl_valueOfFName = new javax.swing.JLabel();
        lbl_valueofNic = new javax.swing.JLabel();
        lbl_valueOfSalutation = new javax.swing.JLabel();
        lbl_valueOfGender = new javax.swing.JLabel();
        lbl_valueOfLName = new javax.swing.JLabel();
        lbl_valueOfNo = new javax.swing.JLabel();
        lbl_valueOfStreet2 = new javax.swing.JLabel();
        lbl_valueOfStreet1 = new javax.swing.JLabel();
        lbl_valueOfCity = new javax.swing.JLabel();
        lbl_valueOfLQualification = new javax.swing.JLabel();
        lbl_valueOfEmail = new javax.swing.JLabel();
        lbl_valueOfHomeNo = new javax.swing.JLabel();
        lbl_valueOfMobileNO = new javax.swing.JLabel();
        lbl_status2 = new javax.swing.JLabel();
        cmb_status = new javax.swing.JComboBox();
        btn_update = new javax.swing.JButton();
        lbl_background = new javax.swing.JLabel();

        popup_menu.setText("jMenuItem1");
        popup_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menuActionPerformed(evt);
            }
        });
        popupMenu.add(popup_menu);

        popup_help.setText("jMenuItem2");
        popup_help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_helpActionPerformed(evt);
            }
        });
        popupMenu.add(popup_help);

        popup_exit.setText("jMenuItem3");
        popup_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_exitActionPerformed(evt);
            }
        });
        popupMenu.add(popup_exit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_Expenceheader.setBackground(new java.awt.Color(255, 255, 255));
        pnl_Expenceheader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnl_Expenceheader.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_ExpenceheaderMouseClicked(evt);
            }
        });
        pnl_Expenceheader.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cancel.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pnl_Expenceheader.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 10, 16, 16));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/menu.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        pnl_Expenceheader.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 9, 32, 32));

        lbl_userType.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_userType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_userType.setText("User type");
        pnl_Expenceheader.add(lbl_userType, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 30, 220, -1));

        lbl_username.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        lbl_username.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_username.setText("Username");
        pnl_Expenceheader.add(lbl_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 10, 220, -1));

        lbl_date.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_date.setText("jLabel3");
        pnl_Expenceheader.add(lbl_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 100, -1));

        lbl_time.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_time.setText("jLabel3");
        pnl_Expenceheader.add(lbl_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 23, 100, -1));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Admin Panel - Employee Details");
        pnl_Expenceheader.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 360, 30));

        getContentPane().add(pnl_Expenceheader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 50));

        jPanel3.setOpaque(false);
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane5.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jTabbedPane5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane5MouseClicked(evt);
            }
        });

        jPanel15.setOpaque(false);

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 12))); // NOI18N
        jPanel30.setOpaque(false);
        jPanel30.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_BscDetlsSrchBy.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_BscDetlsSrchBy.setText("Search By :");
        jPanel30.add(lbl_BscDetlsSrchBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 31, -1, -1));

        cmb_serchtype.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        cmb_serchtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Employee Name", "Job Title", "Past" }));
        cmb_serchtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_serchtypeActionPerformed(evt);
            }
        });
        jPanel30.add(cmb_serchtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 28, 194, -1));

        cmb_result.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        cmb_result.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_resultActionPerformed(evt);
            }
        });
        jPanel30.add(cmb_result, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 270, 30));

        cmb_employeeNames.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        cmb_employeeNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_employeeNamesActionPerformed(evt);
            }
        });
        jPanel30.add(cmb_employeeNames, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 270, 30));

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Result", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 12))); // NOI18N
        jPanel31.setOpaque(false);

        tbl_basicDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "NIC", "Name", "Latest Qualification", "Email", "Mobile No", "Address", "Registered Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_basicDetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tbl_basicDetails);

        jButton3.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jButton3.setText("Generate Report");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel31Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, 1315, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Basic Details", jPanel15);

        jPanel16.setOpaque(false);

        pnl_Expencesearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        pnl_Expencesearch.setOpaque(false);

        txt_employeesearch.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        txt_employeesearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_employeesearchActionPerformed(evt);
            }
        });
        txt_employeesearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_employeesearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_employeesearchKeyTyped(evt);
            }
        });

        btn_search.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_search.setText("Search");
        btn_search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_ExpencesearchLayout = new javax.swing.GroupLayout(pnl_Expencesearch);
        pnl_Expencesearch.setLayout(pnl_ExpencesearchLayout);
        pnl_ExpencesearchLayout.setHorizontalGroup(
            pnl_ExpencesearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_ExpencesearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_employeesearch, javax.swing.GroupLayout.PREFERRED_SIZE, 1072, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pnl_ExpencesearchLayout.setVerticalGroup(
            pnl_ExpencesearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_ExpencesearchLayout.createSequentialGroup()
                .addGroup(pnl_ExpencesearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_employeesearch, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        pnl_lecturerDetails.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        pnl_lecturerDetails.setOpaque(false);

        lbl_id.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_id.setText("Employee ID:");

        lbl_nic.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_nic.setText("NIC:");

        lbl_salutation.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_salutation.setText("Salutation:");

        lbl_firstName.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_firstName.setText("First Name:");

        lbl_lastName.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_lastName.setText("Last Name:");

        lbl_addno.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_addno.setText("No :");

        lbl_gender.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_gender.setText("Gender:");

        lbl_email.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_email.setText("Email:");

        lbl_homeNumber.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_homeNumber.setText("Home Number:");

        lbl_mobileNumber.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_mobileNumber.setText("Mobile Number:");

        lbl_status.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_status.setText("Job Title :");

        cmb_jobtitle.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_addstreet1.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_addstreet1.setText("Street 1 :");

        lbl_addstreet2.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_addstreet2.setText("Street 2 :");

        lbl_addcity.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_addcity.setText("City :");

        lbl_status1.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_status1.setText("Latest Qualification :");

        lbl_empid.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfFName.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueofNic.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfSalutation.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfGender.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfLName.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfNo.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfStreet2.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfStreet1.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfCity.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfLQualification.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfEmail.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfHomeNo.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_valueOfMobileNO.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        lbl_status2.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        lbl_status2.setText("Status");

        cmb_status.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        cmb_status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Deactive" }));

        btn_update.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_lecturerDetailsLayout = new javax.swing.GroupLayout(pnl_lecturerDetails);
        pnl_lecturerDetails.setLayout(pnl_lecturerDetailsLayout);
        pnl_lecturerDetailsLayout.setHorizontalGroup(
            pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_lecturerDetailsLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl_lecturerDetailsLayout.createSequentialGroup()
                        .addComponent(lbl_status1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_valueOfLQualification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnl_lecturerDetailsLayout.createSequentialGroup()
                        .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_email)
                            .addComponent(lbl_salutation)
                            .addComponent(lbl_status)
                            .addComponent(lbl_firstName)
                            .addComponent(lbl_addno)
                            .addComponent(lbl_homeNumber)
                            .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lbl_id, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbl_addstreet2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(47, 47, 47)
                        .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lbl_empid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_valueOfFName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_valueOfSalutation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_valueOfNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                            .addComponent(lbl_valueOfStreet2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_valueOfHomeNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_valueOfEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_jobtitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_lecturerDetailsLayout.createSequentialGroup()
                        .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_mobileNumber)
                            .addComponent(lbl_addcity, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_addstreet1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_lastName))
                        .addGap(18, 18, 18)
                        .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_lecturerDetailsLayout.createSequentialGroup()
                                .addComponent(lbl_valueOfLName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(23, 23, 23))
                            .addGroup(pnl_lecturerDetailsLayout.createSequentialGroup()
                                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_valueOfStreet1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                                    .addComponent(lbl_valueOfCity, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                                    .addComponent(lbl_valueOfMobileNO, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))
                                .addGap(118, 118, 118))))
                    .addGroup(pnl_lecturerDetailsLayout.createSequentialGroup()
                        .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_lecturerDetailsLayout.createSequentialGroup()
                                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_gender)
                                    .addComponent(lbl_nic))
                                .addGap(74, 74, 74)
                                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_valueOfGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_valueofNic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(pnl_lecturerDetailsLayout.createSequentialGroup()
                                .addComponent(lbl_status2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(cmb_status, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(btn_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(13, 13, 13)))
                        .addContainerGap())))
        );
        pnl_lecturerDetailsLayout.setVerticalGroup(
            pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_lecturerDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_id)
                    .addComponent(lbl_empid, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_nic)
                        .addComponent(lbl_valueofNic, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_salutation)
                        .addComponent(lbl_valueOfSalutation, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_gender))
                    .addComponent(lbl_valueOfGender, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_firstName)
                    .addComponent(lbl_valueOfFName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_lastName)
                    .addComponent(lbl_valueOfLName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_addno)
                    .addComponent(lbl_valueOfNo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_addstreet1)
                    .addComponent(lbl_valueOfStreet1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_addstreet2)
                    .addComponent(lbl_addcity)
                    .addComponent(lbl_valueOfStreet2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_valueOfCity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_homeNumber)
                        .addComponent(lbl_mobileNumber)
                        .addComponent(lbl_valueOfMobileNO, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_valueOfHomeNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_email)
                    .addComponent(lbl_valueOfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_status1)
                    .addComponent(lbl_valueOfLQualification, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_update, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnl_lecturerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmb_jobtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_status)
                        .addComponent(cmb_status, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_status2)))
                .addGap(69, 69, 69))
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_Expencesearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(pnl_lecturerDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(pnl_Expencesearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnl_lecturerDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Manager Registration", jPanel16);

        jPanel3.add(jTabbedPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 1330, 690));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 55, 1350, 710));

        lbl_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Background.png"))); // NOI18N
        lbl_background.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lbl_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_employeesearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_employeesearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_employeesearchActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        String saerch = txt_employeesearch.getText();
        System.out.println(saerch);
        String employeeId, fName, lName, nic, salutaion, salutaion1 = null, addressNo, street1, street2, city, mobile, home, gender, email, jobTitle, qualification, status, userName = null, password, quaction1 = null, quaction2 = null, answer1 = null, answer2 = null, recover_id, gender1 = null;
        try {
            ResultSet rs = DB.getData("SELECT * FROM employee_reg WHERE emp_id='" + saerch + "'");
            while (rs.next()) {
                System.out.println("in");
                employeeId = rs.getString("emp_id");
                fName = rs.getString("f_name");
                lName = rs.getString("l_name");
                nic = rs.getString("nic");
                email = rs.getString("email");
                salutaion = rs.getString("salutation_id");
                addressNo = rs.getString("no");
                street1 = rs.getString("street1");
                street2 = rs.getString("street2");
                city = rs.getString("city");
                mobile = rs.getString("mobile_no");
                home = rs.getString("home_no");
                gender = rs.getString("gender_id");
                status = rs.getString("status");
                ResultSet genderResult = DB.getData("SELECT * FROM gender WHERE gender_id='" + gender + "'");

                while (genderResult.next()) {
                    System.out.println("2");
                    gender1 = genderResult.getString("gender");

                }
                genderResult.close();
                ResultSet salutation = DB.getData("SELECT * FROM salutation WHERE salutation_id='" + salutaion + "'");
                while (salutation.next()) {
                    salutaion1 = salutation.getString("salutation");
                }
                salutation.close();
                jobTitle = rs.getString("job_title_id");
                ResultSet jobtitleRs = DB.getData("SELECT * FROM job_title WHERE job_title_id='" + jobTitle + "'");
                while (jobtitleRs.next()) {
                    cmb_jobtitle.setSelectedItem(jobtitleRs.getString("job_name"));
                }
                jobtitleRs.close();

                qualification = rs.getString("qualification_id");
                ResultSet qulificationRs = DB.getData("SELECT * FROM qualification WHERE qualification_id='" + qualification + "'");
                while (qulificationRs.next()) {
                    lbl_valueOfLQualification.setText(qulificationRs.getString("qualification"));
                }
                qulificationRs.close();

                //set values to Lables
                if (status.equals("1")) {
                    //Active,Deactive
                    cmb_status.setSelectedItem("Active");
                } else {
                    cmb_status.setSelectedItem("Deactive");
                }
                lbl_empid.setText(employeeId);
                lbl_valueofNic.setText(nic);
                lbl_valueOfFName.setText(fName);
                lbl_valueOfCity.setText(city);
                lbl_valueOfEmail.setText(email);
                lbl_valueOfGender.setText(gender1);
                lbl_valueOfHomeNo.setText(home);
                lbl_valueOfLName.setText(lName);
                lbl_valueOfMobileNO.setText(mobile);
                lbl_valueOfNo.setText(addressNo);
                lbl_valueOfSalutation.setText(salutaion1);
                lbl_valueOfStreet1.setText(street1);
                lbl_valueOfStreet2.setText(street2);

            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0012 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
        }
    }//GEN-LAST:event_btn_searchActionPerformed

    private void cmb_serchtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_serchtypeActionPerformed
        //All, Employee Name, Job Title, Past
        String selectedItem = cmb_serchtype.getSelectedItem().toString();
        System.out.println(selectedItem);
        if (selectedItem.equals("All")) {
            tool.clearTable(tbl_basicDetails);
            setDisable();
            setAll();
        } else if (selectedItem.equals("Employee Name")) {
            tool.clearTable(tbl_basicDetails);
            setEmployeeSelect();
        } else if (selectedItem.equals("Job Title")) {
            tool.clearTable(tbl_basicDetails);
            setJobTitleSelect();
        } else if (selectedItem.equals("Past")) {
            tool.clearTable(tbl_basicDetails);
            setDisable();
            setPastSelected();
        }
    }//GEN-LAST:event_cmb_serchtypeActionPerformed

    private void cmb_employeeNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_employeeNamesActionPerformed
        // TODO add your handling code here:
        tool.clearTable(tbl_basicDetails);
        int i = cmb_employeeNames.getItemCount();
        System.out.println(i);
        if (i >= 1) {
            String name = cmb_employeeNames.getSelectedItem().toString().trim();
            String id = name.split("-")[0];
            setEmployeeNameselect(id);
        }


    }//GEN-LAST:event_cmb_employeeNamesActionPerformed

    private void cmb_resultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_resultActionPerformed
        // TODO add your handling code here:
        tool.clearTable(tbl_basicDetails);
        int count = cmb_result.getItemCount();
        if (count > 0) {
            String jobName = cmb_result.getSelectedItem().toString().trim();
            setJobtitleSearch(jobName);

        }
    }//GEN-LAST:event_cmb_resultActionPerformed

    private void txt_employeesearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_employeesearchKeyReleased

    }//GEN-LAST:event_txt_employeesearchKeyReleased

    private void txt_employeesearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_employeesearchKeyTyped

    }//GEN-LAST:event_txt_employeesearchKeyTyped

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        if (lbl_empid.getText() != null) {
            try {
                String jobID = null, StatusID;
                String job = cmb_jobtitle.getSelectedItem().toString().trim();

                String status = cmb_status.getSelectedItem().toString().trim();
                ResultSet jobRS = DB.getData("SELECT job_title_id FROM job_title WHERE job_name='" + job + "'");
                while (jobRS.next()) {
                    jobID = jobRS.getString("job_title_id");
                    System.out.println("job id :" + jobID);
                }
                jobRS.close();
                if (status.equals("Active")) {
                    StatusID = "1";
                } else {
                    StatusID = "0";
                }
                DB.putData("UPDATE employee_reg SET status='" + StatusID + "', job_title_id='" + jobID + "' WHERE emp_id='" + lbl_empid.getText() + "' ");
                JOptionPane.showMessageDialog(this, "Update is completed");
                log.info("Employee ID : "+lbl_empid.getText()+" Employee Job Title Updated at : "+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));
            } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0013 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
            }
        }
        tool.clearComponets(lbl_empid, lbl_valueOfCity, lbl_valueOfEmail, lbl_valueOfFName, lbl_valueOfGender, lbl_valueOfHomeNo,
                lbl_valueOfLName, lbl_valueOfLQualification, lbl_valueOfMobileNO, lbl_valueOfNo, lbl_valueOfSalutation, lbl_valueOfStreet1, lbl_valueOfStreet2, lbl_valueofNic, txt_employeesearch);
        setJobTitle();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Jasper Report
        String company_email = null, company_number = null, details_by;
        try {
            ResultSet rs = DB.getData("SELECT company_email,company_mobile,company_office FROM admin_panel");
            while (rs.next()) {
                company_email = rs.getString("company_email");
                company_number = rs.getString("company_mobile") + " / " + rs.getString("company_office");

            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0014 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
        }
        String Details_By = null;
        //All, Employee Name, Job Title, Past
        details_by = cmb_serchtype.getSelectedItem().toString().trim();
        if (details_by.equals("All")) {
            Details_By = "All Employees";
        } else if (details_by.equals("Employee Name")) {
            Details_By = "Employee :" + cmb_employeeNames.getSelectedItem().toString().trim();
        } else if (details_by.equals("Job Title")) {
            Details_By = "Job Title :" + cmb_result.getSelectedItem().toString().trim();
        } else if (details_by.equals("Past")) {
            Details_By = "Past Employees";
        }
        int i = tbl_basicDetails.getRowCount();
        if (i > 0) {
            try {
                InputStream is = this.getClass().getClassLoader().getResourceAsStream("\\Reports\\Employee details.jrxml");
                JasperDesign jd = JRXmlLoader.load(is);
                JasperReport jr = JasperCompileManager.compileReport(jd);

                JRTableModelDataSource tm = new JRTableModelDataSource(tbl_basicDetails.getModel());

                Map<String, Object> p = new HashMap<String, Object>();
                p.put("email", company_email);
                p.put("numbers", company_number);
                p.put("details by", Details_By);

                JasperPrint jp = JasperFillManager.fillReport(jr, p, tm);
                JasperViewer.viewReport(jp, false);
            } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR - EPD 0015 \nPlease contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
            logError.error(e + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
            }

        } else {
            JOptionPane.showMessageDialog(this, "There is No data to Print");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Menu().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void popup_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menuActionPerformed
        this.dispose();
      new Menu().setVisible(true);
    }//GEN-LAST:event_popup_menuActionPerformed

    private void popup_helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_helpActionPerformed
         try {
            Desktop.getDesktop().open(new File("E:\\Syndicate\\Documentation\\Admin – Employee Details.pdf"));
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_popup_helpActionPerformed

    private void popup_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_exitActionPerformed
        this.dispose();
    }//GEN-LAST:event_popup_exitActionPerformed

    private void pnl_ExpenceheaderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_ExpenceheaderMouseClicked
         if (evt.getButton()==3) {
            popupMenu.show(this, evt.getX() ,evt.getY());
        }
    }//GEN-LAST:event_pnl_ExpenceheaderMouseClicked

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        if (evt.getButton()==3) {
            popupMenu.show(this, evt.getX() ,evt.getY());
        }
    }//GEN-LAST:event_jPanel3MouseClicked

    private void jTabbedPane5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane5MouseClicked
      if (evt.getButton()==3) {
            popupMenu.show(this, evt.getX() ,evt.getY());
        }
    }//GEN-LAST:event_jTabbedPane5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btn_update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmb_employeeNames;
    private javax.swing.JComboBox cmb_jobtitle;
    private javax.swing.JComboBox cmb_result;
    private javax.swing.JComboBox cmb_serchtype;
    private javax.swing.JComboBox cmb_status;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JLabel lbl_BscDetlsSrchBy;
    private javax.swing.JLabel lbl_addcity;
    private javax.swing.JLabel lbl_addno;
    private javax.swing.JLabel lbl_addstreet1;
    private javax.swing.JLabel lbl_addstreet2;
    private javax.swing.JLabel lbl_background;
    private javax.swing.JLabel lbl_date;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_empid;
    private javax.swing.JLabel lbl_firstName;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_homeNumber;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_lastName;
    private javax.swing.JLabel lbl_mobileNumber;
    private javax.swing.JLabel lbl_nic;
    private javax.swing.JLabel lbl_salutation;
    private javax.swing.JLabel lbl_status;
    private javax.swing.JLabel lbl_status1;
    private javax.swing.JLabel lbl_status2;
    private javax.swing.JLabel lbl_time;
    private javax.swing.JLabel lbl_userType;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JLabel lbl_valueOfCity;
    private javax.swing.JLabel lbl_valueOfEmail;
    private javax.swing.JLabel lbl_valueOfFName;
    private javax.swing.JLabel lbl_valueOfGender;
    private javax.swing.JLabel lbl_valueOfHomeNo;
    private javax.swing.JLabel lbl_valueOfLName;
    private javax.swing.JLabel lbl_valueOfLQualification;
    private javax.swing.JLabel lbl_valueOfMobileNO;
    private javax.swing.JLabel lbl_valueOfNo;
    private javax.swing.JLabel lbl_valueOfSalutation;
    private javax.swing.JLabel lbl_valueOfStreet1;
    private javax.swing.JLabel lbl_valueOfStreet2;
    private javax.swing.JLabel lbl_valueofNic;
    private javax.swing.JPanel pnl_Expenceheader;
    private javax.swing.JPanel pnl_Expencesearch;
    private javax.swing.JPanel pnl_lecturerDetails;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JMenuItem popup_exit;
    private javax.swing.JMenuItem popup_help;
    private javax.swing.JMenuItem popup_menu;
    private javax.swing.JTable tbl_basicDetails;
    private javax.swing.JTextField txt_employeesearch;
    // End of variables declaration//GEN-END:variables
}
