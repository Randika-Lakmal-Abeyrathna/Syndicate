/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Classes.JDBC;
import Classes.ToolsClass;
import GUI.Menu;
import java.awt.Desktop;
import java.io.File;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import static org.omg.IOP.CodecPackage.InvalidTypeForEncodingHelper.id;

/**
 *
 * @author Dinusha
 */
public class TeacherPayment extends javax.swing.JFrame {

    JDBC db = new JDBC();
    String date;
    private String id;

    public TeacherPayment() {
        initComponents();
        Menu();
        lbl_date.setText(new Classes.Commons().Date());
        new Classes.Commons().time(lbl_time);

    }
    
    void Menu(){
        popup_menu.setText("Menu");
        popup_help.setText("Help");
        popup_exit.setText("Exit");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        popup_menu = new javax.swing.JMenuItem();
        popup_help = new javax.swing.JMenuItem();
        popup_exit = new javax.swing.JMenuItem();
        pnl_Expenceheader = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lbl_userType = new javax.swing.JLabel();
        lbl_username = new javax.swing.JLabel();
        lbl_date = new javax.swing.JLabel();
        lbl_time = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnl_TeacherpymntDtails = new javax.swing.JPanel();
        Lbl_TecherpymntTcherID = new javax.swing.JLabel();
        Lbl_TcherpymntTcherNme = new javax.swing.JLabel();
        Lbl_TcherpymntMnth = new javax.swing.JLabel();
        Lbl_TcherpymntSubject = new javax.swing.JLabel();
        Lbl_TcherPymntTcherNme1 = new javax.swing.JLabel();
        Cmbobox_TcherpymntSubject = new javax.swing.JComboBox();
        Lbl_TcherpymntAmount = new javax.swing.JLabel();
        btn_teacherPymntSave1 = new javax.swing.JButton();
        txt_tcherPymntID = new javax.swing.JTextField();
        Datechsoor_TcherPymnt = new com.toedter.calendar.JDateChooser();
        Lbl_classFee = new javax.swing.JLabel();
        btn_calculate = new javax.swing.JButton();
        pnl_Tacherpymnts2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_teacherPymnt = new javax.swing.JTable();
        btn_TcherpymntClearall = new javax.swing.JButton();
        btn_TcherpymntRemoveselected = new javax.swing.JButton();
        btn_TcherpymntPay = new javax.swing.JButton();
        lbl_background = new javax.swing.JLabel();

        popup_menu.setText("jMenuItem1");
        popup_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menuActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popup_menu);

        popup_help.setText("jMenuItem2");
        popup_help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_helpActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popup_help);

        popup_exit.setText("jMenuItem3");
        popup_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_exitActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popup_exit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_Expenceheader.setBackground(new java.awt.Color(255, 255, 255));
        pnl_Expenceheader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnl_Expenceheader.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_ExpenceheaderMouseClicked(evt);
            }
        });
        pnl_Expenceheader.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cancel.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pnl_Expenceheader.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 10, 16, 16));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/menu.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        pnl_Expenceheader.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 9, 32, 32));

        lbl_userType.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_userType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_userType.setText("User type");
        pnl_Expenceheader.add(lbl_userType, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 30, 220, -1));

        lbl_username.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        lbl_username.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_username.setText("Username");
        pnl_Expenceheader.add(lbl_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 10, 220, -1));

        lbl_date.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_date.setText("jLabel3");
        pnl_Expenceheader.add(lbl_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 100, -1));

        lbl_time.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_time.setText("jLabel3");
        pnl_Expenceheader.add(lbl_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 23, 100, -1));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Teacher Payments");
        pnl_Expenceheader.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 340, 30));

        getContentPane().add(pnl_Expenceheader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 50));

        pnl_TeacherpymntDtails.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Teacher Payment Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10), new java.awt.Color(0, 0, 0))); // NOI18N
        pnl_TeacherpymntDtails.setOpaque(false);
        pnl_TeacherpymntDtails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_TeacherpymntDtailsMouseClicked(evt);
            }
        });

        Lbl_TecherpymntTcherID.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        Lbl_TecherpymntTcherID.setText("Teacher ID:");

        Lbl_TcherpymntTcherNme.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        Lbl_TcherpymntTcherNme.setText("Name:");

        Lbl_TcherpymntMnth.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        Lbl_TcherpymntMnth.setText("Date:");

        Lbl_TcherpymntSubject.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        Lbl_TcherpymntSubject.setText("Subject:");

        Lbl_TcherPymntTcherNme1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        Cmbobox_TcherpymntSubject.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        Cmbobox_TcherpymntSubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Cmbobox_TcherpymntSubjectMouseReleased(evt);
            }
        });
        Cmbobox_TcherpymntSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cmbobox_TcherpymntSubjectActionPerformed(evt);
            }
        });
        Cmbobox_TcherpymntSubject.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Cmbobox_TcherpymntSubjectFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Cmbobox_TcherpymntSubjectFocusLost(evt);
            }
        });
        Cmbobox_TcherpymntSubject.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Cmbobox_TcherpymntSubjectKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Cmbobox_TcherpymntSubjectKeyReleased(evt);
            }
        });

        Lbl_TcherpymntAmount.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        Lbl_TcherpymntAmount.setText("Amount:");

        btn_teacherPymntSave1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_teacherPymntSave1.setText("Add");
        btn_teacherPymntSave1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_teacherPymntSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_teacherPymntSave1ActionPerformed(evt);
            }
        });

        txt_tcherPymntID.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_tcherPymntID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_tcherPymntIDFocusLost(evt);
            }
        });
        txt_tcherPymntID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_tcherPymntIDKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_tcherPymntIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_tcherPymntIDKeyTyped(evt);
            }
        });

        Datechsoor_TcherPymnt.setDateFormatString("yyyy-MM-dd");
        Datechsoor_TcherPymnt.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        Datechsoor_TcherPymnt.setMinSelectableDate(new java.util.Date(-62135737104000L));
        Datechsoor_TcherPymnt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Datechsoor_TcherPymntFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Datechsoor_TcherPymntFocusLost(evt);
            }
        });

        Lbl_classFee.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        btn_calculate.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_calculate.setText("Calculate");
        btn_calculate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_TeacherpymntDtailsLayout = new javax.swing.GroupLayout(pnl_TeacherpymntDtails);
        pnl_TeacherpymntDtails.setLayout(pnl_TeacherpymntDtailsLayout);
        pnl_TeacherpymntDtailsLayout.setHorizontalGroup(
            pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_TeacherpymntDtailsLayout.createSequentialGroup()
                .addGroup(pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_teacherPymntSave1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnl_TeacherpymntDtailsLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(Lbl_TcherpymntAmount)
                            .addGap(60, 60, 60)
                            .addComponent(Lbl_classFee, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnl_TeacherpymntDtailsLayout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btn_calculate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnl_TeacherpymntDtailsLayout.createSequentialGroup()
                                        .addGroup(pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Lbl_TcherpymntMnth)
                                            .addComponent(Lbl_TecherpymntTcherID)
                                            .addComponent(Lbl_TcherpymntTcherNme))
                                        .addGap(38, 38, 38)
                                        .addGroup(pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_tcherPymntID, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                                            .addComponent(Lbl_TcherPymntTcherNme1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Datechsoor_TcherPymnt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(pnl_TeacherpymntDtailsLayout.createSequentialGroup()
                                        .addComponent(Lbl_TcherpymntSubject)
                                        .addGap(64, 64, 64)
                                        .addComponent(Cmbobox_TcherpymntSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pnl_TeacherpymntDtailsLayout.setVerticalGroup(
            pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_TeacherpymntDtailsLayout.createSequentialGroup()
                .addGroup(pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_TeacherpymntDtailsLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(Lbl_TecherpymntTcherID)
                        .addGap(11, 11, 11)
                        .addComponent(Lbl_TcherpymntTcherNme)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_TeacherpymntDtailsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txt_tcherPymntID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Lbl_TcherPymntTcherNme1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGroup(pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Lbl_TcherpymntMnth)
                    .addComponent(Datechsoor_TcherPymnt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_TeacherpymntDtailsLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Lbl_TcherpymntSubject))
                    .addComponent(Cmbobox_TcherpymntSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_calculate)
                .addGap(33, 33, 33)
                .addGroup(pnl_TeacherpymntDtailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Lbl_classFee, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lbl_TcherpymntAmount))
                .addGap(18, 18, 18)
                .addComponent(btn_teacherPymntSave1)
                .addContainerGap(348, Short.MAX_VALUE))
        );

        getContentPane().add(pnl_TeacherpymntDtails, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 68, 480, 700));

        pnl_Tacherpymnts2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10), new java.awt.Color(0, 0, 0))); // NOI18N
        pnl_Tacherpymnts2.setOpaque(false);
        pnl_Tacherpymnts2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_Tacherpymnts2MouseClicked(evt);
            }
        });

        tbl_teacherPymnt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teacher ID", "Name", "Date", "Subject", "Amount"
            }
        ));
        tbl_teacherPymnt.getTableHeader().setReorderingAllowed(false);
        tbl_teacherPymnt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_teacherPymntMouseClicked(evt);
            }
        });
        tbl_teacherPymnt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbl_teacherPymntKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_teacherPymnt);

        btn_TcherpymntClearall.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_TcherpymntClearall.setText("Clear All");
        btn_TcherpymntClearall.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_TcherpymntClearall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TcherpymntClearallActionPerformed(evt);
            }
        });

        btn_TcherpymntRemoveselected.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_TcherpymntRemoveselected.setText("Remove Selected");
        btn_TcherpymntRemoveselected.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_TcherpymntRemoveselected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TcherpymntRemoveselectedActionPerformed(evt);
            }
        });

        btn_TcherpymntPay.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_TcherpymntPay.setText("Pay");
        btn_TcherpymntPay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_TcherpymntPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TcherpymntPayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_Tacherpymnts2Layout = new javax.swing.GroupLayout(pnl_Tacherpymnts2);
        pnl_Tacherpymnts2.setLayout(pnl_Tacherpymnts2Layout);
        pnl_Tacherpymnts2Layout.setHorizontalGroup(
            pnl_Tacherpymnts2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_Tacherpymnts2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_Tacherpymnts2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 854, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_Tacherpymnts2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_TcherpymntPay, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_TcherpymntRemoveselected)
                        .addGap(4, 4, 4)
                        .addComponent(btn_TcherpymntClearall, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnl_Tacherpymnts2Layout.setVerticalGroup(
            pnl_Tacherpymnts2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_Tacherpymnts2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_Tacherpymnts2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_TcherpymntRemoveselected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_TcherpymntPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_TcherpymntClearall))
                .addContainerGap())
        );

        getContentPane().add(pnl_Tacherpymnts2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 68, 886, 700));

        lbl_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Background.png"))); // NOI18N
        lbl_background.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lbl_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_TcherpymntRemoveselectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TcherpymntRemoveselectedActionPerformed
        int i = tbl_teacherPymnt.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(rootPane, "No Row Selected");
        } else {
            DefaultTableModel d = (DefaultTableModel) tbl_teacherPymnt.getModel();
            d.removeRow(i);
        }
    }//GEN-LAST:event_btn_TcherpymntRemoveselectedActionPerformed

    private void btn_teacherPymntSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_teacherPymntSave1ActionPerformed
        addToTable();
    }//GEN-LAST:event_btn_teacherPymntSave1ActionPerformed

    private void btn_TcherpymntClearallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TcherpymntClearallActionPerformed
        DefaultTableModel teacherPayment = (DefaultTableModel) tbl_teacherPymnt.getModel();
        int t = teacherPayment.getRowCount();

        if (t != 0) {
            for (int i = 0; i < t; i++) {
                teacherPayment.removeRow(0);// TODO add your handling code here:
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No Rows TO Delete !");
        }
    }//GEN-LAST:event_btn_TcherpymntClearallActionPerformed

    private void btn_TcherpymntPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TcherpymntPayActionPerformed
        pay();
    }//GEN-LAST:event_btn_TcherpymntPayActionPerformed

    private void txt_tcherPymntIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_tcherPymntIDKeyTyped

    }//GEN-LAST:event_txt_tcherPymntIDKeyTyped

    private void txt_tcherPymntIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_tcherPymntIDKeyPressed

    }//GEN-LAST:event_txt_tcherPymntIDKeyPressed

    private void Cmbobox_TcherpymntSubjectKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Cmbobox_TcherpymntSubjectKeyPressed

    }//GEN-LAST:event_Cmbobox_TcherpymntSubjectKeyPressed

    private void Cmbobox_TcherpymntSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cmbobox_TcherpymntSubjectActionPerformed

    }//GEN-LAST:event_Cmbobox_TcherpymntSubjectActionPerformed

    private void txt_tcherPymntIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_tcherPymntIDKeyReleased

    }//GEN-LAST:event_txt_tcherPymntIDKeyReleased

    private void txt_tcherPymntIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_tcherPymntIDFocusLost
        loadSubjects();
    }//GEN-LAST:event_txt_tcherPymntIDFocusLost

    private void Datechsoor_TcherPymntFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Datechsoor_TcherPymntFocusGained

    }//GEN-LAST:event_Datechsoor_TcherPymntFocusGained

    private void Cmbobox_TcherpymntSubjectFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Cmbobox_TcherpymntSubjectFocusGained

    }//GEN-LAST:event_Cmbobox_TcherpymntSubjectFocusGained

    private void Datechsoor_TcherPymntFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Datechsoor_TcherPymntFocusLost

    }//GEN-LAST:event_Datechsoor_TcherPymntFocusLost

    private void Cmbobox_TcherpymntSubjectFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Cmbobox_TcherpymntSubjectFocusLost

    }//GEN-LAST:event_Cmbobox_TcherpymntSubjectFocusLost

    private void Cmbobox_TcherpymntSubjectKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Cmbobox_TcherpymntSubjectKeyReleased

    }//GEN-LAST:event_Cmbobox_TcherpymntSubjectKeyReleased

    private void tbl_teacherPymntKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl_teacherPymntKeyPressed

    }//GEN-LAST:event_tbl_teacherPymntKeyPressed

    private void tbl_teacherPymntMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_teacherPymntMouseClicked

    }//GEN-LAST:event_tbl_teacherPymntMouseClicked

    private void Cmbobox_TcherpymntSubjectMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cmbobox_TcherpymntSubjectMouseReleased

    }//GEN-LAST:event_Cmbobox_TcherpymntSubjectMouseReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Menu m = new Menu();
        m.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btn_calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calculateActionPerformed
        calculatePayment();
    }//GEN-LAST:event_btn_calculateActionPerformed

    private void popup_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menuActionPerformed
     this.dispose();
      new Menu().setVisible(true);
    }//GEN-LAST:event_popup_menuActionPerformed

    private void popup_helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_helpActionPerformed
        try {
            Desktop.getDesktop().open(new File("E:\\Syndicate\\Documentation\\General – Expense.pdf"));
            
        } catch (Exception e) {
            e.printStackTrace(); 
        }
    }//GEN-LAST:event_popup_helpActionPerformed

    private void popup_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_exitActionPerformed
     this.dispose();
    }//GEN-LAST:event_popup_exitActionPerformed

    private void pnl_ExpenceheaderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_ExpenceheaderMouseClicked
         if (evt.getButton()==3) {
            jPopupMenu1.show(this, evt.getX() ,evt.getY());
        }
    }//GEN-LAST:event_pnl_ExpenceheaderMouseClicked

    private void pnl_TeacherpymntDtailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_TeacherpymntDtailsMouseClicked
        if (evt.getButton()==3) {
            jPopupMenu1.show(this, evt.getX() ,evt.getY());
        }
    }//GEN-LAST:event_pnl_TeacherpymntDtailsMouseClicked

    private void pnl_Tacherpymnts2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_Tacherpymnts2MouseClicked
       if (evt.getButton()==3) {
            jPopupMenu1.show(this, evt.getX() ,evt.getY());
        }
    }//GEN-LAST:event_pnl_Tacherpymnts2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherPayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Cmbobox_TcherpymntSubject;
    private com.toedter.calendar.JDateChooser Datechsoor_TcherPymnt;
    private javax.swing.JLabel Lbl_TcherPymntTcherNme1;
    private javax.swing.JLabel Lbl_TcherpymntAmount;
    private javax.swing.JLabel Lbl_TcherpymntMnth;
    private javax.swing.JLabel Lbl_TcherpymntSubject;
    private javax.swing.JLabel Lbl_TcherpymntTcherNme;
    private javax.swing.JLabel Lbl_TecherpymntTcherID;
    private javax.swing.JLabel Lbl_classFee;
    private javax.swing.JButton btn_TcherpymntClearall;
    private javax.swing.JButton btn_TcherpymntPay;
    private javax.swing.JButton btn_TcherpymntRemoveselected;
    private javax.swing.JButton btn_calculate;
    private javax.swing.JButton btn_teacherPymntSave1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_background;
    private javax.swing.JLabel lbl_date;
    private javax.swing.JLabel lbl_time;
    private javax.swing.JLabel lbl_userType;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JPanel pnl_Expenceheader;
    private javax.swing.JPanel pnl_Tacherpymnts2;
    private javax.swing.JPanel pnl_TeacherpymntDtails;
    private javax.swing.JMenuItem popup_exit;
    private javax.swing.JMenuItem popup_help;
    private javax.swing.JMenuItem popup_menu;
    private javax.swing.JTable tbl_teacherPymnt;
    private javax.swing.JTextField txt_tcherPymntID;
    // End of variables declaration//GEN-END:variables
    private void loadSubjects() {
        String teacherId = txt_tcherPymntID.getText();
        try {
            ResultSet rs = db.getData("SELECT\n"
                    + "  class_details.*,\n"
                    + "  subject.*,\n"
                    + "  teacher_reg.status,\n"
                    + "  teacher_reg.f_name,\n"
                    + "  teacher_reg.l_name,\n"
                    + "  salutation.salutation\n"
                    + "FROM\n"
                    + "  class_details\n"
                    + "INNER JOIN\n"
                    + "  subject\n"
                    + "INNER JOIN\n"
                    + "  teacher_reg\n"
                    + "INNER JOIN\n"
                    + "  salutation\n"
                    + "ON(\n"
                    + "  class_details.subject_id=subject.subject_id\n"
                    + "  AND\n"
                    + "  class_details.teacher_id=teacher_reg.teacher_id\n"
                    + "  AND\n"
                    + "  teacher_reg.salutation_id=salutation.salutation_id\n"
                    + "  )\n"
                    + "WHERE\n"
                    + "  class_details.teacher_id='" + teacherId + "'");

            Vector v = new Vector();

            while (rs.next()) {
                int status = Integer.parseInt(rs.getString("status"));
                String fname = rs.getString("f_name");
                String lname = rs.getString("l_name");
                String sal = rs.getString("salutation");

                if (status == 1) {
                    Lbl_TcherPymntTcherNme1.setText(sal + ". " + fname + " " + lname);
                    v.add(rs.getString("subject_name"));
                    Cmbobox_TcherpymntSubject.setModel(new DefaultComboBoxModel(v));
                } else if (status == 0) {
                    JOptionPane.showMessageDialog(this, "Teacher you mentioned is Inactive.");
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void calculatePayment() {
        date = new SimpleDateFormat("yyyy-MM-dd").format(Datechsoor_TcherPymnt.getDate());

        try {
            ResultSet rs1 = db.getData("SELECT\n"
                    + "  *\n"
                    + "FROM\n"
                    + "  teacher_time_table\n"
                    + "INNER JOIN\n"
                    + "  subject\n"
                    + "INNER JOIN\n"
                    + "  class_details\n"
                    + "INNER JOIN\n"
                    + "  student_payment\n"
                    + "INNER JOIN\n"
                    + "  student_payment_invoice\n"
                    + "ON(\n"
                    + "  teacher_time_table.subject_id=subject.subject_id\n"
                    + "  AND\n"
                    + "  class_details.subject_id=subject.subject_id\n"
                    + "  AND\n"
                    + "  class_details.class_id=student_payment.class_id\n"
                    + "  AND\n"
                    + "  student_payment.student_payment_id=student_payment_invoice.student_payment_id\n"
                    + "  )\n"
                    + "WHERE\n"
                    + "  teacher_time_table.teacher_id='" + txt_tcherPymntID.getText() + "'\n"
                    + "AND\n"
                    + "  student_payment_invoice.date='" + date + "'\n"
                    + "AND\n"
                    + "  subject.subject_name='" + Cmbobox_TcherpymntSubject.getSelectedItem().toString() + "'");

            ResultSet rs2 = db.getData("SELECT COUNT(*)\n"
                    + "AS count\n"
                    + "FROM\n"
                    + "  teacher_time_table\n"
                    + "INNER JOIN\n"
                    + "  subject\n"
                    + "INNER JOIN\n"
                    + "  class_details\n"
                    + "INNER JOIN\n"
                    + "  student_payment\n"
                    + "INNER JOIN\n"
                    + "  student_payment_invoice\n"
                    + "ON(\n"
                    + "  teacher_time_table.subject_id=subject.subject_id\n"
                    + "  AND\n"
                    + "  class_details.subject_id=subject.subject_id\n"
                    + "  AND\n"
                    + "  class_details.class_id=student_payment.class_id\n"
                    + "  AND\n"
                    + "  student_payment.student_payment_id=student_payment_invoice.student_payment_id\n"
                    + "  )\n"
                    + "WHERE\n"
                    + "  teacher_time_table.teacher_id='" + txt_tcherPymntID.getText() + "'\n"
                    + "AND\n"
                    + "  student_payment_invoice.date='" + date + "'\n"
                    + "AND\n"
                    + "  subject.subject_name='" + Cmbobox_TcherpymntSubject.getSelectedItem().toString() + "'");

            ResultSet rs3 = db.getData("SELECT\n"
                    + "  SUM(student_payment.amount)\n"
                    + "AS sum\n"
                    + "FROM\n"
                    + "  teacher_time_table\n"
                    + "INNER JOIN\n"
                    + "  subject\n"
                    + "INNER JOIN\n"
                    + "  class_details\n"
                    + "INNER JOIN\n"
                    + "  student_payment\n"
                    + "INNER JOIN\n"
                    + "  student_payment_invoice\n"
                    + "ON(\n"
                    + "  teacher_time_table.subject_id=subject.subject_id\n"
                    + "  AND\n"
                    + "  class_details.subject_id=subject.subject_id\n"
                    + "  AND\n"
                    + "  class_details.class_id=student_payment.class_id\n"
                    + "  AND\n"
                    + "  student_payment.student_payment_id=student_payment_invoice.student_payment_id\n"
                    + "  )\n"
                    + "WHERE\n"
                    + "  teacher_time_table.teacher_id='" + txt_tcherPymntID.getText() + "'\n"
                    + "AND\n"
                    + "  student_payment_invoice.date='" + date + "'\n"
                    + "AND\n"
                    + "  subject.subject_name='" + Cmbobox_TcherpymntSubject.getSelectedItem().toString() + "'");

            while (rs1.next()) {
                while (rs2.next()) {
                    while (rs3.next()) {
                        double count = Double.parseDouble(rs2.getString("count"));
                        double sum = Double.parseDouble(rs3.getString("sum"));
                        double classFee = Double.parseDouble(rs1.getString("teacher_time_table.class_fee"));

                        double payment = sum - ((classFee / 100.0) * 20.0) * count;

                        Lbl_classFee.setText(payment + "");
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void addToTable() {
        DefaultTableModel d = (DefaultTableModel) tbl_teacherPymnt.getModel();
        if (tbl_teacherPymnt.getRowCount() > 0) {
            for (int i = 0; i < tbl_teacherPymnt.getRowCount(); i++) {
                String teacherId = (String) tbl_teacherPymnt.getValueAt(i, 0);
                String date = (String) tbl_teacherPymnt.getValueAt(i, 2);
                String subject = (String) tbl_teacherPymnt.getValueAt(i, 3);

                if (!(teacherId.equals(txt_tcherPymntID.getText()) && date.equals(new SimpleDateFormat("yyyy-MM-dd").format(Datechsoor_TcherPymnt.getDate())) && subject.equals(Cmbobox_TcherpymntSubject.getSelectedItem().toString()))) {
                    Vector v = new Vector();
                    v.add(txt_tcherPymntID.getText());
                    v.add(Lbl_TcherPymntTcherNme1.getText());
                    v.add(new SimpleDateFormat("yyyy-MM-dd").format(Datechsoor_TcherPymnt.getDate()));
                    v.add(Cmbobox_TcherpymntSubject.getSelectedItem().toString());
                    v.add(Lbl_classFee.getText());
                    d.addRow(v);
                } else {
                    JOptionPane.showMessageDialog(this, "This Data is alrady Exist");
                }

            }

        } else {
            Vector v = new Vector();
            v.add(txt_tcherPymntID.getText());
            v.add(Lbl_TcherPymntTcherNme1.getText());
            v.add(new SimpleDateFormat("yyyy-MM-dd").format(Datechsoor_TcherPymnt.getDate()));
            v.add(Cmbobox_TcherpymntSubject.getSelectedItem().toString());
            v.add(Lbl_classFee.getText());
            d.addRow(v);
        }

    }

    private void pay() {
        DefaultTableModel t = (DefaultTableModel) tbl_teacherPymnt.getModel();
        if (tbl_teacherPymnt.getRowCount() > 0) {
            for (int i = 0; i < tbl_teacherPymnt.getRowCount(); i++) {
                String teacher_id = (String) t.getValueAt(i, 0);
                String teacherName = (String) t.getValueAt(i, 1);
                String date12 = (String) t.getValueAt(i, 2);
                String subject = (String) t.getValueAt(i, 3);
                String amount = (String) t.getValueAt(i, 4);

                try {
                    db.putData("INSERT INTO teacher_payment (date,amount,teacher_id)VALUE ('" + date12 + "','" + amount + "','" + teacher_id + "') ");
                    System.out.println("paymnt1");
                    ResultSet rs = db.getData("select MAX(teacher_payment_id) as teacher_pay FROM teacher_payment");
                    System.out.println("paymnt2");
                    while (rs.next()) {
                        System.out.println("paymnt3");
                        String teacher_payment_id = rs.getString("teacher_pay");
                        System.out.println(date12);
                        System.out.println(amount);
                        System.out.println(teacher_payment_id);
                        ResultSet rs1 = db.getData("SELECT * FROM teacher_payment WHERE teacher_payment_id='" + teacher_payment_id + "'");
                        while (rs1.next()) {
                            String date1 = rs1.getString("date");
                            String amount1 = rs1.getString("amount");

                            //----------------------------techer_payment_invoice_id-------------///                        
                            String TeacherInvoiceId = new ToolsClass().setTeacherInvoiceId();
                            db.putData("INSERT INTO teacher_payment_invoice (teacher_payment_invoice_id,date,amount,teacher_payment_id)VALUES('" + TeacherInvoiceId + "','" + date1 + "','" + amount1 + "','" + teacher_payment_id + "')");

                            String S3 = "TEACHER PAYMENT";
                            String S4 = "PAYMENT";

                            db.putData("INSERT INTO expence (amount,date,description,expence_type,teacher_payment_invoice_id)VALUE('" + amount1 + "','" + date1 + "','" + S3 + "','" + S4 + "','" + TeacherInvoiceId + "')");

                            genarateReport(teacher_id, teacherName, date12, subject, amount, TeacherInvoiceId);
                            // JOptionPane.showMessageDialog(rootPane, "Payed..!");
                        }
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
            JOptionPane.showMessageDialog(rootPane, "Payed succesfull..!!");
            new ToolsClass().clearTable(tbl_teacherPymnt);
        }

    }

    //Genarate Report
    void genarateReport(String teacherID, String teacherName, String date, String subject, String amount, String invoiceid) {

        String TeacherID = teacherID;
        String TeacherName = teacherName;
        String Date = date;
        String Subject = subject;
        String Amount = amount;
        String InvoiceId = invoiceid;

        try {
            InputStream is = this.getClass().getClassLoader().getResourceAsStream("\\Reports\\teacherPayment.jrxml");
            JasperDesign jd = JRXmlLoader.load(is);
            JasperReport jr = JasperCompileManager.compileReport(jd);

            Map<String, Object> p = new HashMap<String, Object>();

            p.put("Date", Date);
            p.put("TeacherID", TeacherID);
            p.put("TeacherName", TeacherName);
            p.put("InvoiceID", InvoiceId);
            p.put("Subject", Subject.split("-")[1]);
            p.put("Grade", "Grade :" + Subject.split("-")[0]);
            p.put("Amount", Amount);
            p.put("Total", Amount);

            JasperPrint jp = JasperFillManager.fillReport(jr, p, new JREmptyDataSource());
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {
            System.out.println("in genarateReport method in class Teacher payment");
            e.printStackTrace();
        }
    }

}
