/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Classes.JDBC;
import Classes.ToolsClass;
import java.awt.Desktop;
import java.io.File;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hasitha Udara
 */
public class MainTimeTable extends javax.swing.JFrame {

    /**
     * Creates new form MainTimeTable
     */
    public MainTimeTable() {
        initComponents();
        Menu();
        takeDataFromDatabase();
        lbl_date.setText(new Classes.Commons().Date());
        new Classes.Commons().time(lbl_time);
        lbl_userType.setText(Home.ut);
        lbl_username.setText(Home.un);
    }

    JDBC db = new JDBC();
    ToolsClass tcl = new ToolsClass();
    Vector mon, tue, wed, thu, fri, sat, sun;
    int whichRow = 0, sr, sc;
    String info, name, time, clz, show;
    
     //////------------Menu-----------//////

    void Menu() {
        try {
            popup_menu.setText("Menu");
            popup_help.setText("Help");
            popup_exit.setText("Exit");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        popup_menu = new javax.swing.JMenuItem();
        popup_help = new javax.swing.JMenuItem();
        popup_exit = new javax.swing.JMenuItem();
        pnl_header = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lbl_userType = new javax.swing.JLabel();
        lbl_username = new javax.swing.JLabel();
        lbl_time = new javax.swing.JLabel();
        lbl_date = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnl_maintable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_mainTimeTable = new javax.swing.JTable();
        lbl_showInfo = new javax.swing.JLabel();
        lbl_background = new javax.swing.JLabel();

        popup_menu.setText("jMenuItem1");
        popup_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menuActionPerformed(evt);
            }
        });
        popupMenu.add(popup_menu);

        popup_help.setText("jMenuItem2");
        popup_help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_helpActionPerformed(evt);
            }
        });
        popupMenu.add(popup_help);

        popup_exit.setText("jMenuItem1");
        popup_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                popup_exitMouseClicked(evt);
            }
        });
        popup_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_exitActionPerformed(evt);
            }
        });
        popupMenu.add(popup_exit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_header.setBackground(new java.awt.Color(255, 255, 255));
        pnl_header.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnl_header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_headerMouseClicked(evt);
            }
        });
        pnl_header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cancel.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pnl_header.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 10, 16, 16));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/menu.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnl_header.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 9, 32, 32));

        lbl_userType.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_userType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_userType.setText("User type");
        pnl_header.add(lbl_userType, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 30, 220, -1));

        lbl_username.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        lbl_username.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_username.setText("Username");
        pnl_header.add(lbl_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 10, 220, -1));

        lbl_time.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_time.setText("jLabel3");
        pnl_header.add(lbl_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 23, 100, -1));

        lbl_date.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_date.setText("jLabel3");
        pnl_header.add(lbl_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 100, -1));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Main Time Table");
        pnl_header.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 340, 30));

        getContentPane().add(pnl_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 50));

        pnl_maintable.setBorder(javax.swing.BorderFactory.createTitledBorder("The Main Time Table"));
        pnl_maintable.setOpaque(false);
        pnl_maintable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_maintableMouseClicked(evt);
            }
        });

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        tbl_mainTimeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_mainTimeTable.setColumnSelectionAllowed(true);
        tbl_mainTimeTable.getTableHeader().setReorderingAllowed(false);
        tbl_mainTimeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_mainTimeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_mainTimeTable);
        tbl_mainTimeTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        lbl_showInfo.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N

        javax.swing.GroupLayout pnl_maintableLayout = new javax.swing.GroupLayout(pnl_maintable);
        pnl_maintable.setLayout(pnl_maintableLayout);
        pnl_maintableLayout.setHorizontalGroup(
            pnl_maintableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1338, Short.MAX_VALUE)
            .addComponent(lbl_showInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnl_maintableLayout.setVerticalGroup(
            pnl_maintableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_maintableLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_showInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
        );

        getContentPane().add(pnl_maintable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1350, 700));

        lbl_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Background.png"))); // NOI18N
        lbl_background.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lbl_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tbl_mainTimeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_mainTimeTableMouseClicked
        mouseClicked();
    }//GEN-LAST:event_tbl_mainTimeTableMouseClicked

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus

    }//GEN-LAST:event_formWindowGainedFocus

    private void popup_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menuActionPerformed
       this.dispose();
       new Menu().setVisible(true);
    }//GEN-LAST:event_popup_menuActionPerformed

    private void popup_helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_helpActionPerformed
         try {
            Desktop.getDesktop().open(new File("E:\\Syndicate\\Documentation\\General – Main Time Table.pdf"));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_popup_helpActionPerformed

    private void popup_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_exitActionPerformed
      this.dispose();
    }//GEN-LAST:event_popup_exitActionPerformed

    private void popup_exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_popup_exitMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_popup_exitMouseClicked

    private void pnl_headerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_headerMouseClicked
        if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_headerMouseClicked

    private void pnl_maintableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_maintableMouseClicked
        if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_maintableMouseClicked

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
         if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jScrollPane1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainTimeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainTimeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainTimeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainTimeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainTimeTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_background;
    private javax.swing.JLabel lbl_date;
    private javax.swing.JLabel lbl_showInfo;
    private javax.swing.JLabel lbl_time;
    private javax.swing.JLabel lbl_userType;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JPanel pnl_header;
    private javax.swing.JPanel pnl_maintable;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JMenuItem popup_exit;
    private javax.swing.JMenuItem popup_help;
    private javax.swing.JMenuItem popup_menu;
    private javax.swing.JTable tbl_mainTimeTable;
    // End of variables declaration//GEN-END:variables

    private void takeDataFromDatabase() {
        tcl.clearTable(tbl_mainTimeTable);
        try {
            DefaultTableModel deftbl = (DefaultTableModel) tbl_mainTimeTable.getModel();
            //--Taking the resultset--//
            ResultSet rs1 = db.getData("SELECT time,subject_name,f_name,l_name FROM class_details \n"
                    + "  INNER JOIN subject INNER JOIN teacher_reg \n"
                    + "  ON class_details.teacher_id = teacher_reg.teacher_id \n"
                    + "  AND class_details.subject_id= subject.subject_id WHERE day = 'Monday'");

            mon = new Vector();

            while (rs1.next()) {
                String val = rs1.getString("f_name") + " " + rs1.getString("l_name") + ", " + rs1.getString("time") + ", " + rs1.getString("subject_name");
                mon.add(val);
                whichRow++;
            }
            deftbl.addColumn("Monday", mon);

            ResultSet rs2 = db.getData("SELECT time,subject_name,f_name,l_name FROM class_details \n"
                    + "  INNER JOIN subject INNER JOIN teacher_reg \n"
                    + "  ON class_details.teacher_id = teacher_reg.teacher_id \n"
                    + "  AND class_details.subject_id= subject.subject_id WHERE day = 'Tuesday'");

            tue = new Vector();

            while (rs2.next()) {
                String val = rs2.getString("f_name") + " " + rs2.getString("l_name") + ", " + rs2.getString("time") + ", " + rs2.getString("subject_name");
                tue.add(val);
                whichRow++;
            }

            deftbl.addColumn("Tuesday", tue);

            ResultSet rs3 = db.getData("SELECT time,subject_name,f_name,l_name FROM class_details \n"
                    + "  INNER JOIN subject INNER JOIN teacher_reg \n"
                    + "  ON class_details.teacher_id = teacher_reg.teacher_id \n"
                    + "  AND class_details.subject_id= subject.subject_id WHERE day = 'Wednesday'");

            wed = new Vector();
            while (rs3.next()) {
                String val = rs3.getString("f_name") + " " + rs3.getString("l_name") + ", " + rs3.getString("time") + ", " + rs3.getString("subject_name");
                wed.add(val);
                whichRow++;
            }
            deftbl.addColumn("Wednesday", wed);

            ResultSet rs4 = db.getData("SELECT time,subject_name,f_name,l_name FROM class_details \n"
                    + "  INNER JOIN subject INNER JOIN teacher_reg \n"
                    + "  ON class_details.teacher_id = teacher_reg.teacher_id \n"
                    + "  AND class_details.subject_id= subject.subject_id WHERE day = 'Thursday'");

            thu = new Vector();
            while (rs4.next()) {
                String val = rs4.getString("f_name") + " " + rs4.getString("l_name") + ", " + rs4.getString("time") + ", " + rs4.getString("subject_name");
                thu.add(val);
                whichRow++;
            }
            deftbl.addColumn("Thursday", thu);

            ResultSet rs5 = db.getData("SELECT time,subject_name,f_name,l_name FROM class_details \n"
                    + "  INNER JOIN subject INNER JOIN teacher_reg \n"
                    + "  ON class_details.teacher_id = teacher_reg.teacher_id \n"
                    + "  AND class_details.subject_id= subject.subject_id WHERE day = 'Friday'");

            fri = new Vector();
            while (rs5.next()) {
                String val = rs5.getString("f_name") + " " + rs5.getString("l_name") + ", " + rs5.getString("time") + ", " + rs5.getString("subject_name");
                fri.add(val);
                whichRow++;
            }
            deftbl.addColumn("Friday", fri);

            ResultSet rs6 = db.getData("SELECT time,subject_name,f_name,l_name FROM class_details \n"
                    + "  INNER JOIN subject INNER JOIN teacher_reg \n"
                    + "  ON class_details.teacher_id = teacher_reg.teacher_id \n"
                    + "  AND class_details.subject_id= subject.subject_id WHERE day = 'Saturday'");

            sat = new Vector();
            while (rs6.next()) {
                String val = rs6.getString("f_name") + " " + rs6.getString("l_name") + ", " + rs6.getString("time") + ", " + rs6.getString("subject_name");
                sat.add(val);
                whichRow++;
            }
            deftbl.addColumn("Saturday", sat);

            ResultSet rs7 = db.getData("SELECT time,subject_name,f_name,l_name FROM class_details \n"
                    + "  INNER JOIN subject INNER JOIN teacher_reg \n"
                    + "  ON class_details.teacher_id = teacher_reg.teacher_id \n"
                    + "  AND class_details.subject_id= subject.subject_id WHERE day = 'Sunday'");

            sun = new Vector();
            while (rs7.next()) {
                String val = rs7.getString("f_name") + " " + rs7.getString("l_name") + ", " + rs7.getString("time") + ", " + rs7.getString("subject_name");
                sun.add(val);
                whichRow++;
            }
            deftbl.addColumn("Sunday", sun);

        } catch (Exception e) {
            System.out.println("Inside takeDataFromDatabase() method " + e);
        }
    }

    private void mouseClicked() {
        try {
            lbl_showInfo.setText("");
            DefaultTableModel deftbl = (DefaultTableModel) tbl_mainTimeTable.getModel();
            sr = tbl_mainTimeTable.getSelectedRow();
            sc = tbl_mainTimeTable.getSelectedColumn();
            show = deftbl.getValueAt(sr, sc).toString();

            if (show.equals("")) {
                info = "There is no class on this day";
                lbl_showInfo.setText(info);
            } else {
                String regular[] = show.split(",");

                name = regular[0];
                time = regular[1].trim();
                clz = regular[2].trim();

                info = " | " + "Name :- " + name + " | " + "Time :- " + time + " | " + "Class :- " + clz + " | ";
                lbl_showInfo.setText(info);
            }
        } catch (Exception e) {
            System.out.println("");
        }
    }
}
