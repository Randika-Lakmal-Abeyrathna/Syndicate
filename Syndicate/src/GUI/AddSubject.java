/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Classes.JDBC;
import java.awt.Desktop;
import java.io.File;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class AddSubject extends javax.swing.JFrame {

    private int sr;
    JDBC db = new JDBC();

    /**
     * Creates new form ClassDetails
     */
    org.apache.log4j.Logger log=org.apache.log4j.Logger.getLogger("Add Subject Details");
    org.apache.log4j.Logger logError=org.apache.log4j.Logger.getLogger("Add Subject Details");
    public AddSubject() {
        initComponents();
        Menu();
        new Classes.Commons().background(this, lbl_background);
        lbl_date.setText(new Classes.Commons().Date());
        new Classes.Commons().time(lbl_time);
        lbl_username.setText(GUI.Home.un);
        lbl_userType.setText(GUI.Home.ut);
        refresh();
    }
 //////------------Menu-----------//////

    void Menu() {
        try {
            popup_menu.setText("Menu");
            popup_help.setText("Help");
            popup_exit.setText("Exit");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        popup_menu = new javax.swing.JMenuItem();
        popup_help = new javax.swing.JMenuItem();
        popup_exit = new javax.swing.JMenuItem();
        pnl_background = new javax.swing.JPanel();
        pnl_header = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        lbl_userType = new javax.swing.JLabel();
        lbl_username = new javax.swing.JLabel();
        lbl_date = new javax.swing.JLabel();
        lbl_time = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnl_addSubject = new javax.swing.JPanel();
        lbl_subject = new javax.swing.JLabel();
        txt_subjectId = new javax.swing.JTextField();
        txt_subject = new javax.swing.JTextField();
        lbl_subjectId = new javax.swing.JLabel();
        btn_add = new javax.swing.JButton();
        txt_grade = new javax.swing.JTextField();
        lbl_grade = new javax.swing.JLabel();
        btn_delete = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        cmb_medium = new javax.swing.JComboBox();
        lbl_medium = new javax.swing.JLabel();
        pnl_subject = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_subject = new javax.swing.JTable();
        btn_refresh = new javax.swing.JButton();
        lbl_background = new javax.swing.JLabel();

        popup_menu.setText("jMenuItem1");
        popup_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menuActionPerformed(evt);
            }
        });
        popupMenu.add(popup_menu);

        popup_help.setText("jMenuItem2");
        popup_help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_helpActionPerformed(evt);
            }
        });
        popupMenu.add(popup_help);

        popup_exit.setText("jMenuItem3");
        popup_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_exitActionPerformed(evt);
            }
        });
        popupMenu.add(popup_exit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_background.setBackground(new java.awt.Color(255, 255, 255));
        pnl_background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_backgroundMouseClicked(evt);
            }
        });
        pnl_background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_header.setBackground(new java.awt.Color(255, 255, 255));
        pnl_header.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnl_header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_headerMouseClicked(evt);
            }
        });
        pnl_header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cancel.png"))); // NOI18N
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        pnl_header.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 16, 16));

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/menu.png"))); // NOI18N
        jButton6.setContentAreaFilled(false);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnl_header.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 9, 32, 32));

        lbl_userType.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_userType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_userType.setText("User type");
        pnl_header.add(lbl_userType, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, 220, -1));

        lbl_username.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        lbl_username.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_username.setText("Username");
        pnl_header.add(lbl_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 220, -1));

        lbl_date.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_date.setText("jLabel3");
        pnl_header.add(lbl_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 100, -1));

        lbl_time.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_time.setText("jLabel3");
        pnl_header.add(lbl_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 23, 100, -1));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Subjects");
        pnl_header.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 340, 30));

        pnl_background.add(pnl_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 50));

        pnl_addSubject.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Subject", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10), new java.awt.Color(0, 0, 0))); // NOI18N
        pnl_addSubject.setOpaque(false);
        pnl_addSubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_addSubjectMouseClicked(evt);
            }
        });

        lbl_subject.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_subject.setText("Subject:");

        txt_subjectId.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_subjectId.setEnabled(false);

        txt_subject.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        lbl_subjectId.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_subjectId.setText("Subject ID:");

        btn_add.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_add.setText("Add");
        btn_add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        txt_grade.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_grade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_gradeKeyPressed(evt);
            }
        });

        lbl_grade.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_grade.setText("Grade:");

        btn_delete.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_update.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_update.setText("Update");
        btn_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        cmb_medium.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        lbl_medium.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_medium.setText("Medium:");

        javax.swing.GroupLayout pnl_addSubjectLayout = new javax.swing.GroupLayout(pnl_addSubject);
        pnl_addSubject.setLayout(pnl_addSubjectLayout);
        pnl_addSubjectLayout.setHorizontalGroup(
            pnl_addSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_addSubjectLayout.createSequentialGroup()
                .addGroup(pnl_addSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_addSubjectLayout.createSequentialGroup()
                        .addGap(0, 73, Short.MAX_VALUE)
                        .addComponent(btn_update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_addSubjectLayout.createSequentialGroup()
                        .addGroup(pnl_addSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_subject)
                            .addComponent(lbl_subjectId)
                            .addComponent(lbl_grade)
                            .addComponent(lbl_medium))
                        .addGap(18, 18, 18)
                        .addGroup(pnl_addSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmb_medium, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnl_addSubjectLayout.createSequentialGroup()
                                .addGroup(pnl_addSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_subject, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                    .addComponent(txt_grade)
                                    .addComponent(txt_subjectId))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        pnl_addSubjectLayout.setVerticalGroup(
            pnl_addSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_addSubjectLayout.createSequentialGroup()
                .addGroup(pnl_addSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_subjectId, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_subjectId))
                .addGap(13, 13, 13)
                .addGroup(pnl_addSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_subject, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_subject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_addSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_grade))
                .addGap(13, 13, 13)
                .addGroup(pnl_addSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_medium, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_medium))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_addSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add)
                    .addComponent(btn_delete)
                    .addComponent(btn_update))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_background.add(pnl_addSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 370, 220));

        pnl_subject.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Subjects", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10), new java.awt.Color(0, 0, 0))); // NOI18N
        pnl_subject.setOpaque(false);
        pnl_subject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_subjectMouseClicked(evt);
            }
        });

        tbl_subject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject ID", "Subject", "Medium"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_subject.getTableHeader().setReorderingAllowed(false);
        tbl_subject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_subjectMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_subject);
        if (tbl_subject.getColumnModel().getColumnCount() > 0) {
            tbl_subject.getColumnModel().getColumn(0).setResizable(false);
            tbl_subject.getColumnModel().getColumn(1).setResizable(false);
        }

        btn_refresh.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_subjectLayout = new javax.swing.GroupLayout(pnl_subject);
        pnl_subject.setLayout(pnl_subjectLayout);
        pnl_subjectLayout.setHorizontalGroup(
            pnl_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_subjectLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_subjectLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btn_refresh))
        );
        pnl_subjectLayout.setVerticalGroup(
            pnl_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_subjectLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(134, 134, 134))
        );

        pnl_background.add(pnl_subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 310, 220));

        lbl_background.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnl_background.add(lbl_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 320));

        getContentPane().add(pnl_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 320));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        add();
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
       int confirmation=JOptionPane.showConfirmDialog(this, "Are you suer you want to delete this subject", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (confirmation==0) {
        delete();
            
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        update();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        refresh();
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void tbl_subjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_subjectMouseClicked
        tableClick();
    }//GEN-LAST:event_tbl_subjectMouseClicked

    private void txt_gradeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_gradeKeyPressed
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_gradeKeyPressed

    private void popup_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_exitActionPerformed
        this.dispose();
    }//GEN-LAST:event_popup_exitActionPerformed

    private void popup_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menuActionPerformed
       this.dispose();
        new Menu().setVisible(true);
    }//GEN-LAST:event_popup_menuActionPerformed

    private void popup_helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_helpActionPerformed
         try {
            Desktop.getDesktop().open(new File("E:\\Syndicate\\Documentation\\General – Add Subject.pdf"));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_popup_helpActionPerformed

    private void pnl_backgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_backgroundMouseClicked
       if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_backgroundMouseClicked

    private void pnl_headerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_headerMouseClicked
       if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_headerMouseClicked

    private void pnl_addSubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_addSubjectMouseClicked
       if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_addSubjectMouseClicked

    private void pnl_subjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_subjectMouseClicked
      if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_subjectMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddSubject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox cmb_medium;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_background;
    private javax.swing.JLabel lbl_date;
    private javax.swing.JLabel lbl_grade;
    private javax.swing.JLabel lbl_medium;
    private javax.swing.JLabel lbl_subject;
    private javax.swing.JLabel lbl_subjectId;
    private javax.swing.JLabel lbl_time;
    private javax.swing.JLabel lbl_userType;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JPanel pnl_addSubject;
    private javax.swing.JPanel pnl_background;
    private javax.swing.JPanel pnl_header;
    private javax.swing.JPanel pnl_subject;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JMenuItem popup_exit;
    private javax.swing.JMenuItem popup_help;
    private javax.swing.JMenuItem popup_menu;
    private javax.swing.JTable tbl_subject;
    private javax.swing.JTextField txt_grade;
    private javax.swing.JTextField txt_subject;
    private javax.swing.JTextField txt_subjectId;
    // End of variables declaration//GEN-END:variables
    void tableClick() {
        DefaultTableModel d = (DefaultTableModel) tbl_subject.getModel();

        sr = tbl_subject.getSelectedRow();

        String sId = (String) d.getValueAt(sr, 0);
        String sName = (String) d.getValueAt(sr, 1);
        String medium = (String) d.getValueAt(sr, 2);
        String[] ss = sName.split("-");

        txt_subjectId.setText(sId);
        txt_subject.setText(ss[1]);
        txt_grade.setText(ss[0]);
        cmb_medium.setSelectedItem(medium);
    }

    void tableLoad() {
        DefaultTableModel d1 = (DefaultTableModel) tbl_subject.getModel();
        int rowcount1 = d1.getRowCount();
        for (int i = 0; i < rowcount1; i++) {
            d1.removeRow(0);
        }
        try {
            ResultSet r = new JDBC().getData("SELECT * FROM subject INNER JOIN medium ON(subject.medium_id=medium.medium_id)");
            while (r.next()) {
                Vector vec = new Vector();
                vec.add(r.getString("subject_id"));
                vec.add(r.getString("subject_name"));
                vec.add(r.getString("medium"));
                d1.addRow(vec);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void refresh() {
        loadId();
        tableLoad();
        loadMedium();
        txt_subject.setText(null);
        txt_grade.setText(null);
        txt_subject.grabFocus();
    }

   void add() {
        String id = txt_subjectId.getText();
        String su = txt_subject.getText();
        String gr = txt_grade.getText();
        String sub = gr + "-" + su;
        String medium = null;

        boolean f = true;
        int tableRowCount = tbl_subject.getRowCount();
        if (tableRowCount > 0) {
            for (int i = 0; i < tableRowCount; i++) {
                String subject = (String) tbl_subject.getValueAt(i, 1);
                String mid = (String) tbl_subject.getValueAt(i, 2);

                if (subject.toLowerCase().equals(sub.toLowerCase()) && mid.toLowerCase().equals(cmb_medium.getSelectedItem().toString().toLowerCase())) {
                    f = false;
                    break;
                } else {
                    f = true;
                }
            }
        }
        
        if(txt_subject.getText().isEmpty() || txt_grade.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Subject or Grade cannot be empty.");
        } else {
            if (f) {
            try {
                ResultSet rs = db.getData("SELECT medium_id FROM medium WHERE medium='" + cmb_medium.getSelectedItem().toString() + "'");
                while (rs.next()) {
                    medium = rs.getString("medium_id");
                }
                rs.close();
                new JDBC().putData("INSERT INTO subject(subject_id,subject_name,medium_id)VALUES("
                        + "'" + id + "',"
                        + "'" + sub + "',"
                        + "'" + medium + "')");
                JOptionPane.showMessageDialog(this, "Saved.....!");
                log.info("Subject Added at : " + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "ERROR - AS 0002 Please contact Development Team", "ERROR", JOptionPane.ERROR_MESSAGE);
                logError.error(ex + " at : " + new SimpleDateFormat("yyyy-MM-dd  HH:mm:ss").format(new Date()));
            }

            refresh();
        } else {
            JOptionPane.showMessageDialog(this, "This Subject is already Exist");

        }
        }

    }
   
    void loadId() {
        try {
            ResultSet rs = new Classes.JDBC().getData("SELECT * FROM subject");

            while (rs.next()) {
                int getId = rs.getInt(1);
                int setId = getId + 1;

                txt_subjectId.setText(setId + "");
            }
        } catch (Exception ex) {
            Logger.getLogger(AddJobTitle.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void delete() {
        try {
            new JDBC().putData("DELETE FROM subject WHERE subject_id='" + txt_subjectId.getText() + "'");
            JOptionPane.showMessageDialog(this, "Deleted.....!");
            log.warn("Subject ID : "+txt_subjectId.getText()+" Subject Deleted at : "+ new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));
        } catch (Exception e) {
            e.printStackTrace();
        }

        refresh();
    }

    void update() {
        String id = txt_subjectId.getText();
        String su = txt_subject.getText();
        String gr = txt_grade.getText();
        String sub = gr + "-" + su;
        String medium = null;

        try {
            ResultSet rs = db.getData("SELECT medium_id FROM medium WHERE medium='" + cmb_medium.getSelectedItem().toString() + "'");

            while (rs.next()) {
                medium = rs.getString("medium_id");
            }

            new JDBC().putData("UPDATE subject SET subject_name='" + sub + "',medium_id='" + medium + "' WHERE subject_id='" + txt_subjectId.getText() + "'");
            JOptionPane.showMessageDialog(this, "Updated.....!");
            log.info("Subject Updated at : "+ new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));
        } catch (Exception ex) {
            Logger.getLogger(AddJobTitle.class.getName()).log(Level.SEVERE, null, ex);
        }

        refresh();
    }

    private void loadMedium() {
        try {
            ResultSet rs = db.getData("SELECT medium FROM medium");
            Vector v = new Vector();

            while (rs.next()) {
                v.add(rs.getString("medium"));
            }

            cmb_medium.setModel(new DefaultComboBoxModel(v));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}
