/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Classes.JDBC;
import java.awt.Desktop;
import java.io.File;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hasitha Udara
 */
public class StudentRegistration extends javax.swing.JFrame {

    public StudentRegistration() {
        initComponents();
        Menu();
        lbl_date.setText(new Classes.Commons().Date());
        new Classes.Commons().time(lbl_time);
        tcl.setStudentId(lbl_genaratedstuid);
        this.setExtendedState(MAXIMIZED_BOTH);
        loadTblsudenttreg();
        takeTheDate();
        lbl_username.setText(Home.un);
        lbl_userType.setText(Home.ut);
        btn_gardianDetails.setEnabled(false);

    }

    JDBC db = new JDBC();
    Classes.ToolsClass tcl = new Classes.ToolsClass();
    static String guardianid = "", emplyeeid = "", searchThis;
    int sr;
    String gender, salutation, justToday, status;
    static String studentID = "", userName = "", userType = "";

    //////------------Menu-----------//////
    void Menu() {
        try {
            popup_menu.setText("Menu");
            popup_help.setText("Help");
            popup_exit.setText("Exit");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        popup_menu = new javax.swing.JMenuItem();
        popup_help = new javax.swing.JMenuItem();
        popup_exit = new javax.swing.JMenuItem();
        pnl_background = new javax.swing.JPanel();
        pnl_header = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btn_menu = new javax.swing.JButton();
        lbl_userType = new javax.swing.JLabel();
        lbl_username = new javax.swing.JLabel();
        lbl_date = new javax.swing.JLabel();
        lbl_time = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnl_search = new javax.swing.JPanel();
        txt_search = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pnl_studentDetails = new javax.swing.JPanel();
        lbl_id = new javax.swing.JLabel();
        lbl_salutation = new javax.swing.JLabel();
        lbl_lastName = new javax.swing.JLabel();
        lbl_address = new javax.swing.JLabel();
        lbl_no = new javax.swing.JLabel();
        lbl_street1 = new javax.swing.JLabel();
        lbl_street2 = new javax.swing.JLabel();
        lbl_city = new javax.swing.JLabel();
        lbl_gender = new javax.swing.JLabel();
        lbl_birthday = new javax.swing.JLabel();
        lbl_mobileNumber = new javax.swing.JLabel();
        lbl_status = new javax.swing.JLabel();
        txt_mobileNumber = new javax.swing.JTextField();
        txt_city = new javax.swing.JTextField();
        txt_street2 = new javax.swing.JTextField();
        txt_street1 = new javax.swing.JTextField();
        txt_no = new javax.swing.JTextField();
        txt_lastName = new javax.swing.JTextField();
        cmb_gender = new javax.swing.JComboBox();
        cmb_status = new javax.swing.JComboBox();
        cmb_salutation = new javax.swing.JComboBox();
        txt_firstName = new javax.swing.JTextField();
        lbl_firstName = new javax.swing.JLabel();
        lbl_nic = new javax.swing.JLabel();
        txt_school = new javax.swing.JTextField();
        btn_gardianDetails = new javax.swing.JButton();
        jdc_birthday = new com.toedter.calendar.JDateChooser();
        lbl_genaratedstuid = new javax.swing.JLabel();
        pnl_details = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_studentDetails = new javax.swing.JTable();
        btn_refresh = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lbl_background = new javax.swing.JLabel();

        popup_menu.setText("jMenuItem1");
        popup_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menuActionPerformed(evt);
            }
        });
        popupMenu.add(popup_menu);

        popup_help.setText("jMenuItem2");
        popup_help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_helpActionPerformed(evt);
            }
        });
        popupMenu.add(popup_help);

        popup_exit.setText("jMenuItem3");
        popup_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_exitActionPerformed(evt);
            }
        });
        popupMenu.add(popup_exit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_backgroundMouseClicked(evt);
            }
        });
        pnl_background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_header.setBackground(new java.awt.Color(255, 255, 255));
        pnl_header.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnl_header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_headerMouseClicked(evt);
            }
        });
        pnl_header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cancel.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pnl_header.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 10, 16, 16));

        btn_menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/menu.png"))); // NOI18N
        btn_menu.setContentAreaFilled(false);
        btn_menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menuActionPerformed(evt);
            }
        });
        pnl_header.add(btn_menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 9, 32, 32));

        lbl_userType.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_userType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_userType.setText("User type");
        pnl_header.add(lbl_userType, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 30, 220, -1));

        lbl_username.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        lbl_username.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_username.setText("Username");
        pnl_header.add(lbl_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 10, 220, -1));

        lbl_date.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_date.setText("jLabel3");
        pnl_header.add(lbl_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 100, -1));

        lbl_time.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_time.setText("jLabel3");
        pnl_header.add(lbl_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 23, 100, -1));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel2.setText("Student Registration");
        pnl_header.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 340, 30));

        pnl_background.add(pnl_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 50));

        pnl_search.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10), new java.awt.Color(0, 0, 0))); // NOI18N
        pnl_search.setOpaque(false);
        pnl_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_searchMouseClicked(evt);
            }
        });

        txt_search.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_search.setToolTipText("Search By Student ID");
        txt_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_searchMouseClicked(evt);
            }
        });
        txt_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_searchFocusGained(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_searchKeyTyped(evt);
            }
        });

        btn_search.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_search.setText("Search");
        btn_search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel1.setText("Search By Student ID");

        javax.swing.GroupLayout pnl_searchLayout = new javax.swing.GroupLayout(pnl_search);
        pnl_search.setLayout(pnl_searchLayout);
        pnl_searchLayout.setHorizontalGroup(
            pnl_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_searchLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 1013, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_search, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
        );
        pnl_searchLayout.setVerticalGroup(
            pnl_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_searchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_search)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pnl_background.add(pnl_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1366, 75));

        pnl_studentDetails.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10), new java.awt.Color(0, 0, 0))); // NOI18N
        pnl_studentDetails.setOpaque(false);
        pnl_studentDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_studentDetailsMouseClicked(evt);
            }
        });

        lbl_id.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_id.setText("Student ID:");

        lbl_salutation.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_salutation.setText("Salutation:");

        lbl_lastName.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_lastName.setText("Last Name:");

        lbl_address.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_address.setText("Address:-");

        lbl_no.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_no.setText("No:");

        lbl_street1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_street1.setText("Street 01:");

        lbl_street2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_street2.setText("Street 02:");

        lbl_city.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_city.setText("City:");

        lbl_gender.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_gender.setText("Gender:");

        lbl_birthday.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_birthday.setText("Birthday:");

        lbl_mobileNumber.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_mobileNumber.setText("Mobile Number:");

        lbl_status.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_status.setText("Status:");

        txt_mobileNumber.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_mobileNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_mobileNumberKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_mobileNumberKeyTyped(evt);
            }
        });

        txt_city.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_city.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cityKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cityKeyTyped(evt);
            }
        });

        txt_street2.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_street2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_street2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_street2KeyTyped(evt);
            }
        });

        txt_street1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_street1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_street1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_street1KeyTyped(evt);
            }
        });

        txt_no.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_noKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_noKeyTyped(evt);
            }
        });

        txt_lastName.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_lastName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_lastNameFocusLost(evt);
            }
        });
        txt_lastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_lastNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_lastNameKeyTyped(evt);
            }
        });

        cmb_gender.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        cmb_gender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        cmb_gender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmb_genderMouseClicked(evt);
            }
        });
        cmb_gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_genderActionPerformed(evt);
            }
        });

        cmb_status.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        cmb_status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Inactive" }));
        cmb_status.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmb_statusFocusLost(evt);
            }
        });
        cmb_status.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cmb_statusKeyTyped(evt);
            }
        });

        cmb_salutation.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        cmb_salutation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mr", "Mrs", "Miss", "Rev" }));
        cmb_salutation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmb_salutationMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmb_salutationMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmb_salutationMouseReleased(evt);
            }
        });
        cmb_salutation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmb_salutationFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmb_salutationFocusLost(evt);
            }
        });
        cmb_salutation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cmb_salutationKeyTyped(evt);
            }
        });

        txt_firstName.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_firstName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_firstNameFocusLost(evt);
            }
        });
        txt_firstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_firstNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_firstNameKeyTyped(evt);
            }
        });

        lbl_firstName.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_firstName.setText("First Name:");

        lbl_nic.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_nic.setText("School:");

        txt_school.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_school.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_schoolFocusLost(evt);
            }
        });
        txt_school.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_schoolKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_schoolKeyTyped(evt);
            }
        });

        btn_gardianDetails.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_gardianDetails.setText("Guardian Details");
        btn_gardianDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gardianDetailsActionPerformed(evt);
            }
        });

        jdc_birthday.setDateFormatString("yyyy-MM-dd");

        lbl_genaratedstuid.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        javax.swing.GroupLayout pnl_studentDetailsLayout = new javax.swing.GroupLayout(pnl_studentDetails);
        pnl_studentDetails.setLayout(pnl_studentDetailsLayout);
        pnl_studentDetailsLayout.setHorizontalGroup(
            pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_studentDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_mobileNumber)
                    .addComponent(lbl_birthday)
                    .addComponent(lbl_salutation)
                    .addComponent(lbl_id)
                    .addComponent(lbl_lastName)
                    .addComponent(lbl_address)
                    .addGroup(pnl_studentDetailsLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_street1)
                            .addComponent(lbl_no)
                            .addComponent(lbl_street2)
                            .addComponent(lbl_city)))
                    .addComponent(lbl_gender)
                    .addComponent(lbl_firstName)
                    .addComponent(lbl_status)
                    .addComponent(lbl_nic))
                .addGap(33, 33, 33)
                .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_gardianDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addComponent(txt_school)
                    .addComponent(cmb_status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmb_salutation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_mobileNumber)
                    .addComponent(txt_city, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addComponent(txt_street2, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addComponent(txt_street1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addComponent(txt_no, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addComponent(txt_lastName, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addComponent(cmb_gender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_firstName)
                    .addComponent(jdc_birthday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_genaratedstuid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pnl_studentDetailsLayout.setVerticalGroup(
            pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_studentDetailsLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_id)
                    .addComponent(lbl_genaratedstuid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_studentDetailsLayout.createSequentialGroup()
                        .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_salutation, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_salutation))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_firstName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_lastName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmb_gender, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                            .addComponent(lbl_gender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_nic))
                    .addComponent(txt_school, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(lbl_address)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_no)
                    .addComponent(txt_no, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_street1)
                    .addComponent(txt_street1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_street2)
                    .addComponent(txt_street2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_city)
                    .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_studentDetailsLayout.createSequentialGroup()
                        .addGroup(pnl_studentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_mobileNumber)
                            .addComponent(txt_mobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(lbl_birthday, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_status, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_studentDetailsLayout.createSequentialGroup()
                        .addComponent(jdc_birthday, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_status, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addComponent(btn_gardianDetails)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pnl_background.add(pnl_studentDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 128, 500, 630));

        pnl_details.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10), new java.awt.Color(0, 0, 0))); // NOI18N
        pnl_details.setOpaque(false);
        pnl_details.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_detailsMouseClicked(evt);
            }
        });

        tbl_studentDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "First Name", "Last Name", "School", "Address", "Reg. Date", "Mobile Number", "Birthday", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_studentDetails.getTableHeader().setReorderingAllowed(false);
        tbl_studentDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_studentDetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_studentDetails);
        tbl_studentDetails.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (tbl_studentDetails.getColumnModel().getColumnCount() > 0) {
            tbl_studentDetails.getColumnModel().getColumn(0).setResizable(false);
            tbl_studentDetails.getColumnModel().getColumn(1).setResizable(false);
            tbl_studentDetails.getColumnModel().getColumn(2).setResizable(false);
            tbl_studentDetails.getColumnModel().getColumn(3).setResizable(false);
            tbl_studentDetails.getColumnModel().getColumn(4).setResizable(false);
            tbl_studentDetails.getColumnModel().getColumn(5).setResizable(false);
            tbl_studentDetails.getColumnModel().getColumn(6).setResizable(false);
            tbl_studentDetails.getColumnModel().getColumn(7).setResizable(false);
            tbl_studentDetails.getColumnModel().getColumn(8).setResizable(false);
        }

        btn_refresh.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        btn_delete.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_update.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_update.setText("Update");
        btn_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_save.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_save.setText("Save");
        btn_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jButton2.setText("Student Time Table");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_detailsLayout = new javax.swing.GroupLayout(pnl_details);
        pnl_details.setLayout(pnl_detailsLayout);
        pnl_detailsLayout.setHorizontalGroup(
            pnl_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_detailsLayout.createSequentialGroup()
                .addGroup(pnl_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_detailsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_detailsLayout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnl_detailsLayout.setVerticalGroup(
            pnl_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_detailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnl_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnl_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(36, 36, 36))
        );

        pnl_background.add(pnl_details, new org.netbeans.lib.awtextra.AbsoluteConstraints(516, 128, 850, 630));

        lbl_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Background.png"))); // NOI18N
        lbl_background.setText("jLabel1");
        lbl_background.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnl_background.add(lbl_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));

        getContentPane().add(pnl_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));

        setBounds(0, 0, 1366, 768);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        saveToDb();
        loadTblsudenttreg();
    }//GEN-LAST:event_btn_saveActionPerformed

    private void cmb_genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_genderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_genderActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        loadTblsudenttreg();
        clearFields();
        lbl_genaratedstuid.setText("");
        tcl.setStudentId(lbl_genaratedstuid);
        cmb_salutation.grabFocus();
        btn_gardianDetails.setEnabled(false);
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        updateTableContent();
        clearFields();
        tcl.setStudentId(lbl_genaratedstuid);
        loadTblsudenttreg();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        changeStat();
        clearFields();
        tcl.setStudentId(lbl_genaratedstuid);
        loadTblsudenttreg();
    }//GEN-LAST:event_btn_deleteActionPerformed


    private void btn_gardianDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gardianDetailsActionPerformed
        new GuardianRegistration().setVisible(true);
    }//GEN-LAST:event_btn_gardianDetailsActionPerformed

    private void cmb_statusFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmb_statusFocusLost
        if (txt_firstName.getText().equals("")) {
            txt_firstName.grabFocus();
        } else if (txt_lastName.getText().equals("")) {
            txt_lastName.grabFocus();
        } else if (txt_school.getText().equals("")) {
            txt_school.grabFocus();
        } else if (txt_no.getText().equals("")) {
            txt_no.grabFocus();
        } else if (txt_street1.getText().equals("")) {
            txt_street1.grabFocus();
        } else if (txt_street2.getText().equals("")) {
            txt_street2.grabFocus();
        } else if (txt_city.getText().equals("")) {
            txt_city.grabFocus();
        } else if (txt_mobileNumber.getText().equals("")) {
            txt_mobileNumber.grabFocus();
        } else if (jdc_birthday.getDate().toString().equals("")) {
            jdc_birthday.grabFocus();
        }
    }//GEN-LAST:event_cmb_statusFocusLost

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        searchStudent();
        txt_search.setText("");
    }//GEN-LAST:event_btn_searchActionPerformed

    private void tbl_studentDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_studentDetailsMouseClicked
        tableMouseClick();
    }//GEN-LAST:event_tbl_studentDetailsMouseClicked

    private void cmb_salutationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmb_salutationFocusLost
        if (cmb_salutation.getSelectedItem().toString().equals("Mr")) {
            cmb_gender.setSelectedItem("Male");
            cmb_gender.setEnabled(false);
        } else if (cmb_salutation.getSelectedItem().toString().equals("Miss") || cmb_salutation.getSelectedItem().toString().equals("Mrs")) {
            cmb_gender.setSelectedItem("Female");
            cmb_gender.setEnabled(false);
        }
    }//GEN-LAST:event_cmb_salutationFocusLost

    private void txt_firstNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_firstNameFocusLost

    }//GEN-LAST:event_txt_firstNameFocusLost

    private void txt_schoolFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_schoolFocusLost
        tcl.grabFocus(txt_school, txt_no);
    }//GEN-LAST:event_txt_schoolFocusLost

    private void txt_lastNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_lastNameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lastNameFocusLost

    private void cmb_salutationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmb_salutationKeyTyped
        tcl.grabFocus(cmb_salutation, txt_firstName);
    }//GEN-LAST:event_cmb_salutationKeyTyped

    private void txt_firstNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_firstNameKeyTyped
        tcl.grabFocus(txt_firstName, txt_lastName);
        tcl.LetersOnly.keyTyped(evt);
    }//GEN-LAST:event_txt_firstNameKeyTyped

    private void txt_lastNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lastNameKeyTyped
        tcl.LetersAndSpaece.keyTyped(evt);
    }//GEN-LAST:event_txt_lastNameKeyTyped

    private void txt_schoolKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_schoolKeyTyped
        tcl.grabFocus(txt_school, txt_no);
        tcl.LetersAndSpaece.keyTyped(evt);
    }//GEN-LAST:event_txt_schoolKeyTyped

    private void txt_noKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_noKeyTyped
        tcl.grabFocus(txt_no, txt_street1);
    }//GEN-LAST:event_txt_noKeyTyped

    private void txt_street1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_street1KeyTyped
        tcl.grabFocus(txt_street1, txt_street2);

    }//GEN-LAST:event_txt_street1KeyTyped

    private void txt_street2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_street2KeyTyped
        tcl.grabFocus(txt_street2, txt_city);

    }//GEN-LAST:event_txt_street2KeyTyped

    private void txt_cityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cityKeyTyped
        tcl.grabFocus(txt_city, txt_mobileNumber);
    }//GEN-LAST:event_txt_cityKeyTyped

    private void txt_mobileNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_mobileNumberKeyTyped
        if (txt_mobileNumber.getText().length() >= 10) {
            evt.consume();
        }
        tcl.NumbersOnly.keyTyped(evt);
    }//GEN-LAST:event_txt_mobileNumberKeyTyped

    private void cmb_statusKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmb_statusKeyTyped

    }//GEN-LAST:event_cmb_statusKeyTyped

    private void txt_searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyTyped

    }//GEN-LAST:event_txt_searchKeyTyped

    private void txt_searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusGained
        clearFields();
        tcl.setStudentId(lbl_genaratedstuid);
        btn_gardianDetails.setEnabled(false);
    }//GEN-LAST:event_txt_searchFocusGained

    private void btn_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menuActionPerformed
        new Menu().setVisible(true);
    }//GEN-LAST:event_btn_menuActionPerformed

    private void cmb_salutationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmb_salutationMouseClicked

    }//GEN-LAST:event_cmb_salutationMouseClicked

    private void cmb_genderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmb_genderMouseClicked

    }//GEN-LAST:event_cmb_genderMouseClicked

    private void cmb_salutationMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmb_salutationMouseReleased

    }//GEN-LAST:event_cmb_salutationMouseReleased

    private void cmb_salutationMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmb_salutationMousePressed

    }//GEN-LAST:event_cmb_salutationMousePressed

    private void txt_firstNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_firstNameKeyPressed
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == 40) {
            txt_lastName.grabFocus();
        }
    }//GEN-LAST:event_txt_firstNameKeyPressed

    private void txt_lastNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lastNameKeyPressed
        if (evt.getKeyCode() == 38) {
            txt_firstName.grabFocus();
        }
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == 40) {
            txt_school.grabFocus();
        }
    }//GEN-LAST:event_txt_lastNameKeyPressed

    private void txt_schoolKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_schoolKeyPressed
        if (evt.getKeyCode() == 38) {
            txt_lastName.grabFocus();
        }
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == 40) {
            txt_no.grabFocus();
        }
    }//GEN-LAST:event_txt_schoolKeyPressed

    private void txt_noKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_noKeyPressed
        if (evt.getKeyCode() == 38) {
            txt_school.grabFocus();
        }
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == 40) {
            txt_street1.grabFocus();
        }
    }//GEN-LAST:event_txt_noKeyPressed

    private void txt_street1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_street1KeyPressed
        if (evt.getKeyCode() == 38) {
            txt_no.grabFocus();
        }
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == 40) {
            txt_street2.grabFocus();
        }
    }//GEN-LAST:event_txt_street1KeyPressed

    private void txt_street2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_street2KeyPressed
        if (evt.getKeyCode() == 38) {
            txt_street1.grabFocus();
        }
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == 40) {
            txt_city.grabFocus();
        }
    }//GEN-LAST:event_txt_street2KeyPressed

    private void txt_cityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cityKeyPressed
        if (evt.getKeyCode() == 38) {
            txt_street2.grabFocus();
        }
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == 40) {
            txt_mobileNumber.grabFocus();
        }
    }//GEN-LAST:event_txt_cityKeyPressed

    private void txt_mobileNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_mobileNumberKeyPressed
        if (evt.getKeyCode() == 38) {
            txt_city.grabFocus();
        }
    }//GEN-LAST:event_txt_mobileNumberKeyPressed

    private void cmb_salutationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmb_salutationFocusGained
        cmb_gender.setEnabled(true);
    }//GEN-LAST:event_cmb_salutationFocusGained

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        tcl.setStudentId(lbl_genaratedstuid);
        loadTblsudenttreg();
        clearFields();
        takeTheDate();
        btn_gardianDetails.setEnabled(false);
    }//GEN-LAST:event_formWindowActivated

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        studentTimeTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void popup_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menuActionPerformed
        this.dispose();
        new Menu().setVisible(true);
    }//GEN-LAST:event_popup_menuActionPerformed

    private void popup_helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_helpActionPerformed
        try {
            Desktop.getDesktop().open(new File("E:\\Syndicate\\Documentation\\General – Student Registration.pdf"));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_popup_helpActionPerformed

    private void popup_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_exitActionPerformed
        this.dispose();
    }//GEN-LAST:event_popup_exitActionPerformed

    private void pnl_backgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_backgroundMouseClicked
        if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_backgroundMouseClicked

    private void pnl_headerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_headerMouseClicked
        if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_headerMouseClicked

    private void pnl_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_searchMouseClicked
        if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_searchMouseClicked

    private void pnl_studentDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_studentDetailsMouseClicked
        if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_studentDetailsMouseClicked

    private void pnl_detailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_detailsMouseClicked
        if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_detailsMouseClicked

    private void txt_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_searchMouseClicked
        txt_search.setText("STU");
    }//GEN-LAST:event_txt_searchMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuardianRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuardianRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuardianRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuardianRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentRegistration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_gardianDetails;
    private javax.swing.JButton btn_menu;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox cmb_gender;
    private javax.swing.JComboBox cmb_salutation;
    private javax.swing.JComboBox cmb_status;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdc_birthday;
    private javax.swing.JLabel lbl_address;
    private javax.swing.JLabel lbl_background;
    private javax.swing.JLabel lbl_birthday;
    private javax.swing.JLabel lbl_city;
    private javax.swing.JLabel lbl_date;
    private javax.swing.JLabel lbl_firstName;
    private javax.swing.JLabel lbl_genaratedstuid;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_lastName;
    private javax.swing.JLabel lbl_mobileNumber;
    private javax.swing.JLabel lbl_nic;
    private javax.swing.JLabel lbl_no;
    private javax.swing.JLabel lbl_salutation;
    private javax.swing.JLabel lbl_status;
    private javax.swing.JLabel lbl_street1;
    private javax.swing.JLabel lbl_street2;
    private javax.swing.JLabel lbl_time;
    private javax.swing.JLabel lbl_userType;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JPanel pnl_background;
    private javax.swing.JPanel pnl_details;
    private javax.swing.JPanel pnl_header;
    private javax.swing.JPanel pnl_search;
    private javax.swing.JPanel pnl_studentDetails;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JMenuItem popup_exit;
    private javax.swing.JMenuItem popup_help;
    private javax.swing.JMenuItem popup_menu;
    private javax.swing.JTable tbl_studentDetails;
    private javax.swing.JTextField txt_city;
    private javax.swing.JTextField txt_firstName;
    private javax.swing.JTextField txt_lastName;
    private javax.swing.JTextField txt_mobileNumber;
    private javax.swing.JTextField txt_no;
    private javax.swing.JTextField txt_school;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_street1;
    private javax.swing.JTextField txt_street2;
    // End of variables declaration//GEN-END:variables

//---------------Saving a Student to the system---------------------//
    private void saveToDb() {

        try {

            if (txt_firstName.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Fields cannot Be Empty!");
                txt_firstName.grabFocus();

            } else if (txt_lastName.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Fields cannot Be Empty!");
                txt_lastName.grabFocus();

            } else if (txt_school.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Fields cannot Be Empty!");
                txt_school.grabFocus();

            } else if (txt_no.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Fields cannot Be Empty!");
                txt_no.grabFocus();

            } else if (txt_city.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Fields cannot Be Empty!");
                txt_city.grabFocus();

            } else if (txt_mobileNumber.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Fields cannot Be Empty!");
                txt_mobileNumber.grabFocus();

            } else if (jdc_birthday.getDate().equals(null)) {
                JOptionPane.showMessageDialog(rootPane, "Fields cannot Be Empty!");
                jdc_birthday.grabFocus();
            } else {

                RegistrationFee.SRfirstname = txt_firstName.getText();
                RegistrationFee.SRlastname = txt_lastName.getText();
                RegistrationFee.studentid = lbl_genaratedstuid.getText();

                //--Set Salutation ID--//
                RegistrationFee.SRsalutation = "";
                if (cmb_salutation.getSelectedItem().equals("Mr")) {
                    RegistrationFee.SRsalutation = "1";
                } else if (cmb_salutation.getSelectedItem().equals("Mrs")) {
                    RegistrationFee.SRsalutation = "2";
                } else if (cmb_salutation.getSelectedItem().equals("Miss")) {
                    RegistrationFee.SRsalutation = "3";
                } else if (cmb_salutation.getSelectedItem().equals("Rev")) {
                    RegistrationFee.SRsalutation = "4";
                }
                //--End of setting salutation id--//

                //--Set Gender ID--//
                RegistrationFee.SRgender = "";
                if (cmb_gender.getSelectedItem().equals("Male")) {
                    RegistrationFee.SRgender = "1";
                } else if (cmb_salutation.getSelectedItem().equals("Female")) {
                    RegistrationFee.SRgender = "2";
                }
                //--End of Setting Gender ID--//
                RegistrationFee.SRschool = txt_school.getText();
                RegistrationFee.SRbirthday = new SimpleDateFormat("yyyy-MM-dd").format(jdc_birthday.getDate());
                RegistrationFee.SRno = txt_no.getText();
                RegistrationFee.SRstreet1 = txt_street1.getText();
                RegistrationFee.SRstreet2 = txt_street2.getText();
                RegistrationFee.SRcity = txt_city.getText();
                RegistrationFee.SRmobileNumber = txt_mobileNumber.getText();

                //--Setting Status of the student--//
                if (cmb_status.getSelectedItem().equals("Active")) {
                    RegistrationFee.SRstat = "1";
                } else if (cmb_status.getSelectedItem().equals("Inactive")) {
                    RegistrationFee.SRstat = "0";
                }
                //--End of Setting Status--//

                //--Saving a Guardian--//
                System.out.println("Student save ok");
                new GuardianRegistration().setVisible(true);
                //--End of saving a Guardian--//   
            }

        } catch (Exception e) {
            System.out.println("Inside saveToDb()" + e);
            e.printStackTrace();
        }
    }
//---------------End of Saving a Student---------------------//    

//---------------Student reg Table Load from the Database---------------------//
    private void loadTblsudenttreg() {
        tcl.clearTable(tbl_studentDetails);
        try {

            ResultSet rs = db.getData("SELECT * FROM student_reg");
            while (rs.next()) {
                String id = rs.getString("student_id");
                String fname = rs.getString("f_name");
                String lname = rs.getString("l_name");
                String school = rs.getString("school");
                String address = rs.getString("no") + ", " + rs.getString("street1") + ", " + rs.getString("street2") + ", " + rs.getString("city");
                String date = rs.getString("date").toString();
                String mobile = rs.getString("mobile_no");
                String bday = rs.getString("birthday").toString();
                String stat = rs.getString("status").toString();

                switch (stat) {
                    case "0":
                        stat = "Inactive";
                        break;
                    case "1":
                        stat = "Active";
                        break;
                }

                tcl.addToTable(tbl_studentDetails, id, fname, lname, school, address, date, mobile, bday, stat);
            }
        } catch (Exception ex) {
            System.out.println("loadTblsudenttreg() = " + ex);
            ex.printStackTrace();
        }
    }
//---------------End of Student reg Table Load from the Database---------------------//

//---------------Update Student details on the Database---------------------//
    private void updateTableContent() {
        try {
            //--End of setting salutation id--//
            String firstName = txt_firstName.getText();
            String lastName = txt_lastName.getText();

            //--End of Setting Gendar ID--//
            String school = txt_school.getText();
            String no = txt_no.getText();
            String street1 = txt_street1.getText();
            String street2 = txt_street2.getText();
            String city = txt_city.getText();
            String mobileNumber = txt_mobileNumber.getText();

            int st = 1;

            if (cmb_status.getSelectedItem().equals("Active")) {
                st = 1;
            } else if (cmb_status.getSelectedItem().equals("Inactive")) {
                st = 0;
            }

            //--End of Setting Status--//
            db.putData("UPDATE student_reg SET f_name = '" + firstName + "', l_name = '" + lastName + "', school = '" + school + "', mobile_no = '" + mobileNumber + "', no = '" + no + "', street1 = '" + street1 + "', street2 = '" + street2 + "', city = '" + city + "', status='" + st + "' WHERE student_id = '" + lbl_genaratedstuid.getText() + "'");

        } catch (Exception e) {
            System.out.println("updateTableContent() in student = " + e);
            e.printStackTrace();
        }
    }
//---------------End of Update Student details on the Database---------------------//

//--To take the current date--//
    private void takeTheDate() {
        RegistrationFee.justToday = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
    }
//--End of take the current date--//

//--Changing the student stat--//
    private void changeStat() {
        String id = lbl_genaratedstuid.getText().toString();
        try {
            ResultSet rs = db.getData("SELECT * FROM student_reg WHERE student_id = '" + id + "'");
            while (rs.next()) {

                if (!(rs.getString("student_id").equals(""))) {
                    db.putData("UPDATE student_reg SET status = '0' WHERE student_id = '" + id + "'");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "There is No Such Student With" + id + " id in the System");
                }
            }
        } catch (Exception ex) {
            System.out.println("Inside changeStat()" + ex);
            ex.printStackTrace();
        }
    }
//--End of changing the student stat--//

//--Searching a student--//
    private void searchStudent() {
        try {
            if (txt_search.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Please Enter a Valid Number");
                loadTblsudenttreg();
                txt_search.grabFocus();

            } else if (txt_search.getText().length() < 4) {
                JOptionPane.showMessageDialog(rootPane, "Please Enter a Valid Number");
                loadTblsudenttreg();
                txt_search.grabFocus();

            } else if (txt_search.getText().length() == 4) {
                tcl.clearTable(tbl_studentDetails);

                searchThis = "STU" + txt_search.getText().toString();

                ResultSet rs = db.getData("SELECT * FROM student_reg WHERE student_id = '" + searchThis + "' ORDER BY student_id DESC ");

                if (rs.next()) {

                    String id = rs.getString("student_id");
                    String fname = rs.getString("f_name");
                    String lname = rs.getString("l_name");
                    String school = rs.getString("school");
                    String address = rs.getString("no") + ", " + rs.getString("street1") + ", " + rs.getString("street2") + ", " + rs.getString("city");
                    String regdate = rs.getString("date");
                    String mobileno = rs.getString("mobile_no");
                    String birthday = rs.getString("birthday");
                    String stat = rs.getString("status");

                    switch (stat) {
                        case "0":
                            stat = "Inactive";
                            break;
                        case "1":
                            stat = "Active";
                            break;
                    }

                    tcl.addToTable(tbl_studentDetails, id, fname, lname, school, address, regdate, mobileno, birthday, stat);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Please Enter a Valid Number");
                    loadTblsudenttreg();
                    txt_search.grabFocus();
                }

            } else if (txt_search.getText().length() == 7) {
                tcl.clearTable(tbl_studentDetails);

                if (txt_search.getText().trim().toUpperCase().contains("STU")) {
                    searchThis = txt_search.getText().toUpperCase().trim().toString();
                }

                ResultSet rs = db.getData("SELECT * FROM student_reg WHERE student_id = '" + searchThis + "' ORDER BY student_id DESC ");

                if (rs.next()) {

                    String id = rs.getString("student_id");
                    String fname = rs.getString("f_name");
                    String lname = rs.getString("l_name");
                    String school = rs.getString("school");
                    String address = rs.getString("no") + ", " + rs.getString("street1") + ", " + rs.getString("street2") + ", " + rs.getString("city");
                    String regdate = rs.getString("date");
                    String mobileno = rs.getString("mobile_no");
                    String birthday = rs.getString("birthday");
                    String stat = rs.getString("status");

                    switch (stat) {
                        case "0":
                            stat = "Inactive";
                            break;
                        case "1":
                            stat = "Active";
                            break;
                    }

                    tcl.addToTable(tbl_studentDetails, id, fname, lname, school, address, regdate, mobileno, birthday, stat);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Please Enter a Valid Number");
                    loadTblsudenttreg();
                    txt_search.grabFocus();
                }
            }
        } catch (Exception e) {
            System.out.println("Inside searchStudent()" + e);
            e.printStackTrace();
        }
    }
//--End of Searching a student--//

//--Start of MouseClick tableMouseClick() method--//
    private void tableMouseClick() {
        try {
            btn_gardianDetails.setEnabled(true);
            clearFields();
            DefaultTableModel deftbl = (DefaultTableModel) tbl_studentDetails.getModel();
            sr = tbl_studentDetails.getSelectedRow();
            String studid = (String) deftbl.getValueAt(sr, 0);

            if (tbl_studentDetails.getRowCount() != 0) {
                ResultSet rs = db.getData("SELECT guardion_id FROM student_reg WHERE student_id='" + studid + "'");
                while (rs.next()) {
                    GuardianRegistration.selectGuardian = rs.getString("guardion_id");
                }

                String fname = (String) deftbl.getValueAt(sr, 1);
                String lname = (String) deftbl.getValueAt(sr, 2);
                String school = (String) deftbl.getValueAt(sr, 3);
                String conaddress[] = ((String) deftbl.getValueAt(sr, 4)).split(",");
                String mobile = (String) deftbl.getValueAt(sr, 6);
                Date bday = new SimpleDateFormat("yyyy-MM-dd").parse((String) deftbl.getValueAt(sr, 7));
                String stat = (String) deftbl.getValueAt(sr, 8);

                lbl_genaratedstuid.setText(studid);
                txt_firstName.setText(fname);
                txt_lastName.setText(lname);
                txt_school.setText(school);
                txt_no.setText(conaddress[0].trim());
                txt_street1.setText(conaddress[1].trim());
                txt_street2.setText(conaddress[2].trim());
                txt_city.setText(conaddress[3].trim());
                txt_mobileNumber.setText(mobile);
                jdc_birthday.setDate(bday);

                switch (stat.toString()) {
                    case "Active":
                        cmb_status.setSelectedItem("Active");
                        break;
                    case "Inactive":
                        cmb_status.setSelectedItem("Inactive");
                        break;
                }
            }

        } catch (Exception e) {
            System.out.println("Inside the tableMouseClick()" + e);
            e.printStackTrace();
        }
    }
//--End of MouseClick--//

//--Clear fields--//
    private void clearFields() {
        txt_firstName.setText("");
        txt_lastName.setText("");
        txt_school.setText("");
        txt_no.setText("");
        txt_street1.setText("");
        txt_street2.setText("");
        txt_city.setText("");
        txt_mobileNumber.setText("");
        txt_search.setText("");
        jdc_birthday.setDate(null);
    }
//--Clear fields--//

//--- student Time table --------//
    void studentTimeTable() {
        try {
            studentID = lbl_genaratedstuid.getText();
            userName = lbl_username.getText();
            userType = lbl_userType.getText();
            ResultSet rs = db.getData("SELECT * FROM student_reg WHERE student_id='" + studentID + "'");
            if (rs.next()) {
                new StudentTimeTable().setVisible(true);
            } else {
                JOptionPane.showConfirmDialog(rootPane, "Incorrect Student Id or un-registerd Student.. Check again", "warning", JOptionPane.OK_CANCEL_OPTION);
            }
        } catch (Exception ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
