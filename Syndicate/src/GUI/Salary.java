/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Classes.JDBC;
import Classes.ToolsClass;
import java.awt.event.KeyEvent;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author USER
 */
public class Salary extends javax.swing.JFrame {

    /**
     * Creates new form Salary
     */
    ToolsClass tool = new ToolsClass();
    JDBC DB = new JDBC();
    String userName;
    String emp_id;

    public Salary() {
        initComponents();
        Menu();
        lbl_date.setText(new Classes.Commons().Date());
        new Classes.Commons().time(lbl_time);
        new Classes.Commons().background(this, lbl_background);
        lbl_username.setText(Home.un);
        lbl_userType.setText(Home.ut);
        String type = cmb_type.getSelectedItem().toString();
        if (type.endsWith("Advance")) {
            txt_total.setVisible(true);
            lbl_valueOfTotal.setVisible(false);
        } else {
            txt_total.setVisible(false);
            lbl_valueOfTotal.setVisible(true);

        }
        userName = lbl_username.getText();
        try {
            ResultSet rs = DB.getData("SELECT emp_id FROM login WHERE user_name='" + userName + "'");
            if (rs.next()) {
                emp_id = rs.getString("emp_id");
            }
        } catch (Exception e) {
            System.out.println("in constructor");
            e.printStackTrace();
        }
        txt_total.setVisible(false);
    }
    
     //////------------Menu-----------//////

    void Menu() {
        try {
            popup_menu.setText("Menu");
            popup_exit.setText("Exit");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }


    //getLeaves method
    void getLeaves(String employeeID) {
        leavesfulldays = 0;
        leaveshalfdays = 0;
        try {
            ResultSet rs4 = DB.getData("SELECT * FROM leaves WHERE date LIKE'" + new SimpleDateFormat("yyyy-MM").format(new Date()) + "%' AND emp_id='" + employeeID + "' ");
            while (rs4.next()) {
                System.out.println("in");
                String discription = rs4.getString("description");
                leavesTaken = rs4.getString("taken_leaves");
                if (leavesTaken.equals("1")) {
                    leaveshalfdays++;
                } else if (leavesTaken.equals("2")) {
                    leavesfulldays++;
                }
                String date = rs4.getString("date");

                tool.addToTable(tbl_leaves, discription, leavesTaken, date);
            }
        } catch (Exception e) {
            System.out.println("in getLeaves in class leaves ");
            e.printStackTrace();
        }

    }
    public String advanceID = "-";

    //get Advance Details
    void getAdvance(String employeeID) {
        System.out.println("in method");
        try {
            ResultSet rs5 = DB.getData("SELECT * FROM salary_advance WHERE month LIKE'" + new SimpleDateFormat("yyyy-MM").format(new Date()) + "%' AND  emp_id='" + employeeID + "'");//
            while (rs5.next()) {
                advanceID = "";
                System.out.println("im advance");
                if (advanceID.equals("")) {
                    advanceID = rs5.getString("salary_advance_id");
                } else {
                    advanceID = advanceID + " / " + rs5.getString("salary_advance_id");
                }
                advance = rs5.getString("amount");
                String date = rs5.getString("month");

                tool.addToTable(tbl_advance, advance, date);
            }
        } catch (Exception e) {
            System.out.println("in getAdvance Method in class salary");
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        popup_menu = new javax.swing.JMenuItem();
        popup_exit = new javax.swing.JMenuItem();
        pnl_background = new javax.swing.JPanel();
        pnl_header = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        lbl_userType = new javax.swing.JLabel();
        lbl_username = new javax.swing.JLabel();
        lbl_time = new javax.swing.JLabel();
        lbl_date = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        pnl_search = new javax.swing.JPanel();
        btn_Search = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        lbl_name1 = new javax.swing.JLabel();
        pnl_details = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbl_valueOfName = new javax.swing.JLabel();
        lbl_valueOfSalary = new javax.swing.JLabel();
        lbl_valueOfTotal = new javax.swing.JLabel();
        lbl_valueOfAttendanceFulldays = new javax.swing.JLabel();
        lbl_valueOfattendanceHalfDays = new javax.swing.JLabel();
        lbl_valueOfleavesFulldays = new javax.swing.JLabel();
        lbl_valueOfleavesHalfDays = new javax.swing.JLabel();
        cmb_type = new javax.swing.JComboBox();
        btn_pay = new javax.swing.JButton();
        txt_total = new javax.swing.JTextField();
        pnl_table = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_leaves = new javax.swing.JTable();
        btn_refresh = new javax.swing.JButton();
        pnl_table1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_advance = new javax.swing.JTable();
        btn_refresh1 = new javax.swing.JButton();
        lbl_background = new javax.swing.JLabel();

        popup_menu.setText("jMenuItem1");
        popup_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menuActionPerformed(evt);
            }
        });
        popupMenu.add(popup_menu);

        popup_exit.setText("jMenuItem2");
        popup_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_exitActionPerformed(evt);
            }
        });
        popupMenu.add(popup_exit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        pnl_background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_backgroundMouseClicked(evt);
            }
        });
        pnl_background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_header.setBackground(new java.awt.Color(255, 255, 255));
        pnl_header.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnl_header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_headerMouseClicked(evt);
            }
        });
        pnl_header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cancel.png"))); // NOI18N
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        pnl_header.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 10, 16, 16));

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/menu.png"))); // NOI18N
        jButton6.setContentAreaFilled(false);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        pnl_header.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 9, 32, 32));

        lbl_userType.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_userType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_userType.setText("User type");
        pnl_header.add(lbl_userType, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 30, 220, -1));

        lbl_username.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        lbl_username.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_username.setText("Username");
        pnl_header.add(lbl_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, 220, -1));

        lbl_time.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_time.setText("jLabel3");
        pnl_header.add(lbl_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 23, 100, -1));

        lbl_date.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lbl_date.setText("jLabel3");
        pnl_header.add(lbl_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 100, -1));

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel11.setText("Salary");
        pnl_header.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 340, 30));

        pnl_background.add(pnl_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 50));

        pnl_search.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10), new java.awt.Color(0, 0, 0))); // NOI18N
        pnl_search.setOpaque(false);
        pnl_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_searchMouseClicked(evt);
            }
        });

        btn_Search.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_Search.setText("Search");
        btn_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchActionPerformed(evt);
            }
        });

        txt_search.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txt_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_searchFocusGained(evt);
            }
        });

        lbl_name1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_name1.setText("Search Employee ID:");

        javax.swing.GroupLayout pnl_searchLayout = new javax.swing.GroupLayout(pnl_search);
        pnl_search.setLayout(pnl_searchLayout);
        pnl_searchLayout.setHorizontalGroup(
            pnl_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_searchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_name1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnl_searchLayout.setVerticalGroup(
            pnl_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_searchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_search)
                    .addGroup(pnl_searchLayout.createSequentialGroup()
                        .addComponent(lbl_name1)
                        .addGap(4, 4, 4))
                    .addComponent(btn_Search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_background.add(pnl_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 56, 960, 70));

        pnl_details.setBorder(javax.swing.BorderFactory.createTitledBorder("Salary Details"));
        pnl_details.setOpaque(false);
        pnl_details.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_detailsMouseClicked(evt);
            }
        });
        pnl_details.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel1.setText("Name :");
        pnl_details.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel2.setText("Basic salary :");
        pnl_details.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel3.setText("Attendance ");
        pnl_details.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel4.setText("Full Days :");
        pnl_details.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, -1, -1));

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel5.setText("half Days :");
        pnl_details.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, -1, -1));

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel6.setText("Leaves ");
        pnl_details.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel7.setText("Full Days :");
        pnl_details.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, -1, -1));

        jLabel8.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel8.setText("Half Day :");
        pnl_details.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, -1, -1));

        jLabel9.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel9.setText("Type : ");
        pnl_details.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        jLabel10.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel10.setText("Total :");
        pnl_details.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        lbl_valueOfName.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pnl_details.add(lbl_valueOfName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 170, 20));

        lbl_valueOfSalary.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pnl_details.add(lbl_valueOfSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 170, 20));

        lbl_valueOfTotal.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lbl_valueOfTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lbl_valueOfTotalKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lbl_valueOfTotalKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lbl_valueOfTotalKeyTyped(evt);
            }
        });
        pnl_details.add(lbl_valueOfTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 170, 29));

        lbl_valueOfAttendanceFulldays.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pnl_details.add(lbl_valueOfAttendanceFulldays, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 140, 20));

        lbl_valueOfattendanceHalfDays.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pnl_details.add(lbl_valueOfattendanceHalfDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, 130, 20));

        lbl_valueOfleavesFulldays.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pnl_details.add(lbl_valueOfleavesFulldays, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 140, 20));

        lbl_valueOfleavesHalfDays.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pnl_details.add(lbl_valueOfleavesHalfDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 140, 20));

        cmb_type.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        cmb_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Advance", "Salary" }));
        cmb_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_typeActionPerformed(evt);
            }
        });
        pnl_details.add(cmb_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 170, -1));

        btn_pay.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        btn_pay.setText("Pay");
        btn_pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_payActionPerformed(evt);
            }
        });
        pnl_details.add(btn_pay, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, 100, -1));

        txt_total.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        txt_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totalActionPerformed(evt);
            }
        });
        txt_total.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_totalFocusLost(evt);
            }
        });
        txt_total.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_totalKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_totalKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_totalKeyTyped(evt);
            }
        });
        pnl_details.add(txt_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 170, 30));

        pnl_background.add(pnl_details, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 390, 350));

        pnl_table.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Leave Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10))); // NOI18N
        pnl_table.setOpaque(false);
        pnl_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_tableMouseClicked(evt);
            }
        });

        tbl_leaves.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Discrption", "Leaves Taken", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_leaves.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbl_leaves);

        btn_refresh.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_tableLayout = new javax.swing.GroupLayout(pnl_table);
        pnl_table.setLayout(pnl_tableLayout);
        pnl_tableLayout.setHorizontalGroup(
            pnl_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_tableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_tableLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_refresh)))
                .addContainerGap())
        );
        pnl_tableLayout.setVerticalGroup(
            pnl_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_tableLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(193, 193, 193))
        );

        pnl_background.add(pnl_table, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 550, 160));

        pnl_table1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Advance Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10))); // NOI18N
        pnl_table1.setOpaque(false);
        pnl_table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_table1MouseClicked(evt);
            }
        });

        tbl_advance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Total Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_advance.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbl_advance);

        btn_refresh1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btn_refresh1.setText("Refresh");
        btn_refresh1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_refresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refresh1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_table1Layout = new javax.swing.GroupLayout(pnl_table1);
        pnl_table1.setLayout(pnl_table1Layout);
        pnl_table1Layout.setHorizontalGroup(
            pnl_table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_table1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_table1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_refresh1)))
                .addContainerGap())
        );
        pnl_table1Layout.setVerticalGroup(
            pnl_table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_table1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_refresh1)
                .addGap(55, 55, 55))
        );

        pnl_background.add(pnl_table1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 290, 550, 200));

        lbl_background.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnl_background.add(lbl_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl_background, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(980, 501));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed
    String fname, lname, job_title_id, employeeId, basicSalary, advance, etf_epf, company_etf_epf;
    String payday = "0", leavesTaken = "0";
    double aditionPay = 0;

    int leavesfulldays = 0, leaveshalfdays = 0;
    int valueOfAdvance = 0;
    double Total_ETF_EPF = 0, Total_Company_ETF_EPF = 0, etf_epfCalculate = 0;
    private void btn_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchActionPerformed
        //tool.clearComponets(txt_search, txt_total, lbl_valueOfAttendanceFulldays, lbl_valueOfName, lbl_valueOfSalary, lbl_valueOfTotal, lbl_valueOfattendanceHalfDays, lbl_valueOfleavesFulldays, lbl_valueOfleavesHalfDays);
        int fulldays = 0, halfdays = 0;
        employeeId = txt_search.getText();
        tool.clearTable(tbl_advance);
        tool.clearTable(tbl_leaves);
        if (!employeeId.equals("")) {
            try {
                ResultSet rs = DB.getData("SELECT * FROM employee_reg WHERE emp_id='" + employeeId + "'");
                while (rs.next()) {
                    fname = rs.getString("f_name");
                    lname = rs.getString("l_name");
                    job_title_id = rs.getString("job_title_id");

                    ResultSet rs1 = DB.getData("SELECT * FROM basic_salary WHERE job_title_id='" + job_title_id + "'");
                    while (rs1.next()) {
                        basicSalary = rs1.getString("amount");
                    }
                    ResultSet rs2 = DB.getData("SELECT * FROM attendance WHERE emp_id='" + employeeId + "' AND date LIKE'" + new SimpleDateFormat("yyyy-MM").format(new Date()) + "%' ");
                    long time = 0;
                    int days = 0;
                    while (rs2.next()) {
                        String intime = rs2.getString("in_time");
                        String outtime = rs2.getString("out_time");

                        SimpleDateFormat df = new SimpleDateFormat("HH:mm:ss");
                        Date timeIn = df.parse(intime);
                        Date timeOut = df.parse(outtime);

                        long timeCalculate = timeOut.getTime() - timeIn.getTime();
                        int hoursCalculate = Integer.parseInt(Long.toString(timeCalculate / (60 * 60 * 1000) % 24));
                        if (hoursCalculate >= 8) {
                            fulldays++;
                        } else if (4 <= hoursCalculate && hoursCalculate < 8) {
                            halfdays++;
                        }
                        time = +(timeOut.getTime() - timeIn.getTime());
                        days++;
                    }
                    lbl_valueOfAttendanceFulldays.setText(fulldays + "");
                    lbl_valueOfattendanceHalfDays.setText(halfdays + "");

                    ResultSet rs3 = DB.getData("SELECT * FROM admin_panel");
                    while (rs3.next()) {
                        payday = rs3.getString("employee_salary_payday");
                        etf_epf = rs3.getString("etf/epf_employee");
                        company_etf_epf = rs3.getString("etf/epf_company");
                    }
                    getLeaves(employeeId);
                    getAdvance(employeeId);
                    int advancetblcount = tbl_advance.getRowCount();
                    if (advancetblcount > 0) {
                        valueOfAdvance = tool.getTotalValue(tbl_advance, 0);

                    }

                    double fullAttendaceDaysPay = fulldays * Double.valueOf(payday);
                    double halfAttendanceDaysPay = halfdays * (Double.valueOf(payday) / 2);

                    double fullLevesDayPay = leavesfulldays * Double.valueOf(payday);
                    double halfLevesDayPay = leaveshalfdays * (Double.valueOf(payday) / 2);

                    etf_epfCalculate = (Double.parseDouble(basicSalary) * Double.parseDouble(etf_epf)) / 100;
                    Total_Company_ETF_EPF = (Double.parseDouble(basicSalary) * Double.parseDouble(company_etf_epf)) / 100 + etf_epfCalculate;

                    aditionPay = fullAttendaceDaysPay + halfAttendanceDaysPay + fullLevesDayPay + halfLevesDayPay;
                    double salary = Integer.parseInt(basicSalary) + aditionPay - etf_epfCalculate - valueOfAdvance;
                    lbl_valueOfTotal.setText(salary + "");
                    lbl_valueOfleavesHalfDays.setText(leaveshalfdays + "");
                    lbl_valueOfleavesFulldays.setText(leavesfulldays + "");

                    lbl_valueOfName.setText(fname + " " + lname);
                    lbl_valueOfSalary.setText(basicSalary);

                }
            } catch (Exception e) {
                System.out.println("in btn Search in class salary Details");
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_btn_SearchActionPerformed
    String ID;
    private void btn_payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_payActionPerformed
        //Advance, Salary
        String type = cmb_type.getSelectedItem().toString();
        if (type.equals("Salary")) {
            try {
                DB.putData("INSERT INTO salary(month,attendance,taken_leaves,payment,emp_id) VALUES ('" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "','" + (Integer.parseInt(lbl_valueOfAttendanceFulldays.getText()) + Integer.parseInt(lbl_valueOfattendanceHalfDays.getText())) + "','" + leavesfulldays + leaveshalfdays + "','" + aditionPay+ "','" + employeeId + "')");
                ResultSet rs = DB.getData("SELECT salary_id FROM salary ORDER BY salary_id DESC LIMIT 1 ");
                if (rs.next()) {
                    DB.putData("INSERT INTO etf_epf (amount,salary_id) VALUES ('" + (Double.valueOf(basicSalary) / 100) * Double.valueOf(etf_epf) + "','" + rs.getString("salary_id") + "')");
                    ID = tool.setSalaryInvoiceId();
                    DB.putData("INSERT INTO salary_invoice (salary_invoice_id,amount,date,type,salary_id) VALUES "
                            + "('" + ID + "','" + Double.valueOf(lbl_valueOfTotal.getText()) + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "','salary','" + rs.getString("salary_id") + "')");
                    DB.putData("INSERT INTO expence (amount,date,description,expence_type,salary_invoice_id) VALUES "
                            + "('" + (Double.valueOf(lbl_valueOfTotal.getText())) + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "','Salary ','Salary','" + ID + "')");
                    DB.putData("INSERT INTO expence (amount,date,description,expence_type,salary_invoice_id) VALUES "
                            + "('" + Total_Company_ETF_EPF + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "','ETF/EPF ','ETF/EPF','" + ID + "')");
                }
                genareateReport();
            } catch (Exception e) {
                System.out.println("in btn pay in IF Condition Salary in class salary");
                e.printStackTrace();
            }
        } else if (type.equals("Advance")) {
            if (!txt_total.getText().equals("")) {
                try {
                    ResultSet rs = DB.getData("SELECT salary_advance_id FROM salary_advance ORDER BY salary_advance_id DESC LIMIT 1");
                    if (rs.next()) {
                        String advanceid = (Integer.parseInt(rs.getString("salary_advance_id")) + 1) + "";
                        String ID = tool.setSalaryInvoiceId();
                        DB.putData("INSERT INTO salary_advance (salary_advance_id,month,amount,emp_id) VALUES ('" + advanceid + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "','" + Double.valueOf(txt_total.getText()) + "','" + employeeId + "')");
                        DB.putData("INSERT INTO salary_invoice (salary_invoice_id,amount,date,type,salary_advance_id) VALUES "
                                + "('" + ID + "','" + Double.valueOf(txt_total.getText()) + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "','Advance','" + rs.getString("salary_advance_id") + "')");
                        DB.putData("INSERT INTO expence (amount,date,description,expence_type,salary_invoice_id) VALUES "
                                + "('" + txt_total.getText() + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "','Advance','Salary','" + ID + "')");
                    } else {
                        String advanceid = "1";
                        String ID = tool.setSalaryInvoiceId();
                        DB.putData("INSERT INTO salary_advance (salary_advance_id,month,amount,emp_id) VALUES ('" + advanceid + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "','" + Double.valueOf(txt_total.getText()) + "','" + employeeId + "')");
                        DB.putData("INSERT INTO salary_invoice (salary_invoice_id,amount,date,type,salary_advance_id) VALUES "
                                + "('" + ID + "','" + Double.valueOf(txt_total.getText()) + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "','Advance','" + advanceid + "')");
                        DB.putData("INSERT INTO expence (amount,date,description,expence_type,salary_invoice_id) VALUES "
                                + "('" + txt_total.getText() + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "','Advance','Salary','" + ID + "')");
                    }
                } catch (Exception e) {
                    System.out.println("in btn pay in ELSE Condition Salary in class salary");
                    e.printStackTrace();
                }
            }else{
                JOptionPane.showMessageDialog(this, "Invalid Value");
            }

        }
        tool.clearComponets(txt_search, txt_total, lbl_valueOfAttendanceFulldays, lbl_valueOfName, lbl_valueOfSalary, lbl_valueOfTotal, lbl_valueOfattendanceHalfDays, lbl_valueOfleavesFulldays, lbl_valueOfleavesHalfDays);
        tool.clearTable(tbl_advance);
        tool.clearTable(tbl_leaves);
    }//GEN-LAST:event_btn_payActionPerformed

    private void cmb_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_typeActionPerformed
        //Advance, Salary
        String type = cmb_type.getSelectedItem().toString();
        if (type.endsWith("Advance")) {
            txt_total.setVisible(true);
            lbl_valueOfTotal.setVisible(false);
        } else {
            txt_total.setVisible(false);
            lbl_valueOfTotal.setVisible(true);

        }
    }//GEN-LAST:event_cmb_typeActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        new Menu().setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void lbl_valueOfTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbl_valueOfTotalKeyTyped
        System.out.println(evt.getKeyChar());
    }//GEN-LAST:event_lbl_valueOfTotalKeyTyped

    private void lbl_valueOfTotalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbl_valueOfTotalKeyReleased
        System.out.println(evt.getKeyChar());
    }//GEN-LAST:event_lbl_valueOfTotalKeyReleased

    private void lbl_valueOfTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbl_valueOfTotalKeyPressed
        System.out.println(evt.getKeyChar());
    }//GEN-LAST:event_lbl_valueOfTotalKeyPressed
    int i1 = 0;
    private void txt_totalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_totalKeyTyped
        System.out.println(evt.getKeyChar());
        if (Character.isDigit(evt.getKeyChar())) {
            if (!txt_total.getText().equals("")) {
                if (txt_total.getText().contains(".")) {
                    if (i1 >= 2) {
                        evt.consume();
                    } else {
                        i1++;
                        System.out.println("im in other");
                    }

                    System.out.println("this is i1: " + i1);
                } else {
                    i1 = 0;
                }
            }

        } else if (evt.getKeyChar() == '.') {
            if (txt_total.getText().contains(".")) {
                evt.consume();
            }
        } else {
            evt.consume();
        }

    }//GEN-LAST:event_txt_totalKeyTyped

    private void txt_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_totalActionPerformed

    private void txt_totalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_totalKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {

            if (txt_total.getText().contains(".")) {
                i1--;
            } else {
                i1 = 0;
            }
        }
    }//GEN-LAST:event_txt_totalKeyPressed

    private void txt_totalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_totalKeyReleased
        if (!txt_total.getText().equals("")) {
            if (txt_total.getText().contains(".")) {

            } else {
                i1 = 0;
            }
        }

    }//GEN-LAST:event_txt_totalKeyReleased

    private void txt_searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusGained
        txt_search.setText("EMP");
    }//GEN-LAST:event_txt_searchFocusGained

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        if (!txt_search.getText().equals("")) {
            getLeaves(txt_search.getText());

        }
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_refresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refresh1ActionPerformed
        if (!txt_search.getText().equals("")) {
            getAdvance(txt_search.getText());

        }
    }//GEN-LAST:event_btn_refresh1ActionPerformed

    private void txt_totalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_totalFocusLost
        if (tbl_advance.getRowCount() > 0) {
            JOptionPane.showMessageDialog(this, "You have Alrady taken a Advance. please contact Manager");
            txt_total.setText("");

        }
    }//GEN-LAST:event_txt_totalFocusLost

    private void popup_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menuActionPerformed
        this.dispose();
        new Menu().setVisible(true);
    }//GEN-LAST:event_popup_menuActionPerformed

    private void popup_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_exitActionPerformed
       this.dispose();
    }//GEN-LAST:event_popup_exitActionPerformed

    private void pnl_backgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_backgroundMouseClicked
        if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_backgroundMouseClicked

    private void pnl_headerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_headerMouseClicked
        if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_headerMouseClicked

    private void pnl_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_searchMouseClicked
        if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_searchMouseClicked

    private void pnl_detailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_detailsMouseClicked
       if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_detailsMouseClicked

    private void pnl_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_tableMouseClicked
        if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_tableMouseClicked

    private void pnl_table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_table1MouseClicked
       if (evt.getButton() == 3) {
            popupMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_pnl_table1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Salary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Salary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Salary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Salary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Salary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Search;
    private javax.swing.JButton btn_pay;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_refresh1;
    private javax.swing.JComboBox cmb_type;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_background;
    private javax.swing.JLabel lbl_date;
    private javax.swing.JLabel lbl_name1;
    private javax.swing.JLabel lbl_time;
    private javax.swing.JLabel lbl_userType;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JLabel lbl_valueOfAttendanceFulldays;
    private javax.swing.JLabel lbl_valueOfName;
    private javax.swing.JLabel lbl_valueOfSalary;
    private javax.swing.JLabel lbl_valueOfTotal;
    private javax.swing.JLabel lbl_valueOfattendanceHalfDays;
    private javax.swing.JLabel lbl_valueOfleavesFulldays;
    private javax.swing.JLabel lbl_valueOfleavesHalfDays;
    private javax.swing.JPanel pnl_background;
    private javax.swing.JPanel pnl_details;
    private javax.swing.JPanel pnl_header;
    private javax.swing.JPanel pnl_search;
    private javax.swing.JPanel pnl_table;
    private javax.swing.JPanel pnl_table1;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JMenuItem popup_exit;
    private javax.swing.JMenuItem popup_menu;
    private javax.swing.JTable tbl_advance;
    private javax.swing.JTable tbl_leaves;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables
void genareateReport() {
        String company_email = null, company_number = null, details_by;
        String month, empId = null, employeeName = null, salaryInvoiceId, salaryAdvanceId = null;
        double basicSalary1, Addition, grossTotal, etfepf, advance1, totalDiduction, netPay;
        month = new SimpleDateFormat("yyyy-MMMM").format(new Date());
        salaryInvoiceId = ID;
        salaryAdvanceId = advanceID;

        basicSalary1 = Double.parseDouble(basicSalary);
        Addition = aditionPay;
        grossTotal = basicSalary1 + Addition;

        etfepf = etf_epfCalculate;
        advance1 = valueOfAdvance;

        totalDiduction = etfepf + advance1;

        netPay = grossTotal - totalDiduction;

        try {
            ResultSet rs = DB.getData("SELECT company_email,company_mobile,company_office FROM admin_panel");
            while (rs.next()) {
                company_email = rs.getString("company_email");
                company_number = rs.getString("company_mobile") + " " + rs.getString("company_office");

            }
            ResultSet rs1 = DB.getData("SELECT f_name,l_name FROM employee_reg WHERE emp_id='" + employeeId + "'");
            while (rs1.next()) {
                String fname = rs1.getString("f_name");
                String lname = rs1.getString("l_name");

                employeeName = fname + " " + lname;
            }
        } catch (Exception e) {
            System.out.println("in btn student registration genarate Report in class income details ");
            e.printStackTrace();
        }
        String Details_By = null;
        try {
            InputStream is = this.getClass().getClassLoader().getResourceAsStream("\\Reports\\salarysheet.jrxml");
            JasperDesign jd = JRXmlLoader.load(is);
            JasperReport jr = JasperCompileManager.compileReport(jd);

            Map<String, Object> p = new HashMap<String, Object>();

            p.put("email", company_email);
            p.put("numbers", company_number);
            p.put("month", month);
            p.put("emp_id", employeeId);
            p.put("emp_Name", employeeName);
            p.put("salaryInvoice", salaryInvoiceId);
            p.put("salaryAdvance", salaryAdvanceId);
            p.put("basic", basicSalary1 + "");
            p.put("working", Addition + "");
            p.put("epf", etfepf + "");
            p.put("subTot", grossTotal + "");
            p.put("grossPay", grossTotal + "");
            p.put("advnce", advance1 + "");
            p.put("total", totalDiduction + "");
            p.put("netPay", netPay + "");
            p.put("date", new SimpleDateFormat("yyyy-MM-dd").format(new Date()));

            JasperPrint jp = JasperFillManager.fillReport(jr, p, new JREmptyDataSource());
            JasperViewer.viewReport(jp, false);
        } catch (Exception e) {
            System.out.println("in genarateReport method in class salary");
            e.printStackTrace();
        }

    }

}
